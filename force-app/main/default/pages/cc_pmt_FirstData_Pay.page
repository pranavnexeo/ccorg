<apex:page showHeader="false" sidebar="false" docType="html-5.0" standardStylesheets="false" cache="false" applyHtmlTag="false" applyBodyTag="false" controller="cc_pmt_FirstData">
{!emptyVar}

<script type="text/css">
.divPageOuter {
  margin-top: 0px;
  margin-bottom: 0px;
}
.divPage {
  margin-left: 0px;
  margin-right: 0px;
}
.formPayment {
  border: 0px;
  padding: 0px;
  width: 100%;
  margin-left: 0px;
  margin-right: 0px;
}

</script>


<script name="fdTemplate" id="fdTemplate" type="text/template">
 <div id="fdDiv" class="fdPaymentOuterContainer" >
  <div class="main_content_large_right_container">



   <div class="alert alert-error fdPayment-messagingSection-Error" style="display: none"></div>
   <fieldset>
    <legend>{{pageLabelMap 'PMTFD_New'}}</legend>


<div id="formdiv" class="row-fluid">

    <div class="payment_cc_instructions span10">Enter your payment information.<!--  Enter a profile name if you would like to store this payment method for later. --></div>
<form method="post" name="hpfform" id="hpfform" onsubmit="validation()" target="authframe" action="{{postUrl}}">
        <input type="hidden" name="x_version" VALUE="3.1" />
        <input type="hidden" name="x_method" VALUE="CC" />
        <input type="hidden" name="x_type" VALUE="{{transactionType}}" />
        <input type="hidden" name="x_login" VALUE="{{{login}}}" />
        <input type="hidden" name="x_fp_sequence" VALUE="{{fp_sequence}}" />
        <input type="hidden" name="x_fp_timestamp" VALUE="{{fp_timestamp}}" />
        <input type="hidden" name="x_gateway_id" VALUE="{{gatewayId}}" />
        <input type="hidden" name="x_amount" VALUE="{{amount}}" />
        <input type="hidden" name="x_fp_hash" VALUE="{{fp_hash}}" />
        <input type="hidden" name="x_cust_id" VALUE="{{cust_id}}" />
        <input type="hidden" name="x_relay_response" VALUE="TRUE" />
        <input type="hidden" name="x_relay_always" VALUE="TRUE" />
        <input type="hidden" name="x_show_form" VALUE="PAYMENT_FORM" />
        <input type="hidden" name="x_company" VALUE="{{billingAddress.company}}" />
        <input type="hidden" name="x_first_name" VALUE="{{billingAddress.firstName}}" />
        <input type="hidden" name="x_last_name" VALUE="{{billingAddress.lastName}}" />
        <input type="hidden" name="x_address" style="width:100%" VALUE="{{billingAddress.addressFirstline}}{{#if billingAddress.addressSecondline}},{{billingAddress.addressSecondline}}{{/if}}{{#if billingAddress.addressThirdline}},{{billingAddress.addressThirdline}}{{/if}}" />
        <input type="hidden" name="x_city" VALUE="{{billingAddress.city}}" />
        <input type="hidden" name="x_state" VALUE="{{billingAddress.stateISOCode}}" />
        <input type="hidden" name="x_zip" VALUE="{{billingAddress.postalCode}}" />
        <input type="hidden" name="x_country" VALUE="{{billingAddress.countryISOCode}}" />
        <input type="hidden" name="x_currency_code" VALUE="{{cartData.currencyISOCode}}" />
        <input type="hidden" name="x_invoice_num" VALUE="{{cartData.sfdcName}}" />
        <input type="hidden" name="x_email" style="width:100%" VALUE="{{email}}" />
        <input type="hidden" name="x_relay_url" VALUE="{{relay_url}}" />
</form>

        
        </div>


    <div class="payment_cc_information">

    <iframe id="authframe" name="authframe" width="100%" height="700px" scrolling="auto" style="border:0px"></iframe>


    </div>
   </fieldset>
   <br/>
   
  </div>
 </div>
</script> <!-- end of Authorize.net template -->

<script>
 
function validation() {
    
    //This validation is created because Payeezy has some Max Lenght Fields in the request form, adding this logic by FGG. 9/11/2017
    
    var x_address=document.forms["hpfform"]["x_address"].value;
	var x_company=document.forms["hpfform"]["x_company"].value;
   	var x_first_name=document.forms["hpfform"]["x_first_name"].value;
   	var x_last_name=document.forms["hpfform"]["x_last_name"].value;    
   	var x_city=document.forms["hpfform"]["x_city"].value;
    var x_state=document.forms["hpfform"]["x_state"].value;
    var x_zip=document.forms["hpfform"]["x_zip"].value;
    var x_country=document.forms["hpfform"]["x_country"].value;
    var x_email=document.forms["hpfform"]["x_email"].value;
    
    
    
    if(x_address.length>30)
        document.forms["hpfform"]["x_address"].value=document.forms["hpfform"]["x_address"].value.substring(0,30);
	if(x_company.length>30)
        document.forms["hpfform"]["x_company"].value=document.forms["hpfform"]["x_company"].value.substring(0,30);
	if(x_first_name.length>15)
        document.forms["hpfform"]["x_first_name"].value=document.forms["hpfform"]["x_first_name"].value.substring(0,15);
	if(x_last_name.length>15)
        document.forms["hpfform"]["x_last_name"].value=document.forms["hpfform"]["x_last_name"].value.substring(0,15);
	if(x_city.length>20)
        document.forms["hpfform"]["x_city"].value=document.forms["hpfform"]["x_city"].value.substring(0,20);
	if(x_state.length>2)
        document.forms["hpfform"]["x_state"].value=document.forms["hpfform"]["x_state"].value.substring(0,2);
	if(x_zip.length>10)
        document.forms["hpfform"]["x_zip"].value=document.forms["hpfform"]["x_zip"].value.substring(0,10);
	if(x_country.length>2)
        document.forms["hpfform"]["x_country"].value=document.forms["hpfform"]["x_country"].value.substring(0,2);
    if(x_email.length>30)
        document.forms["hpfform"]["x_email"].value=document.forms["hpfform"]["x_email"].value.substring(0,30);
    // Based on the following Payeezy documentation.  
}
function callParentFunction(str) {
  console.log('callParentFunction: %o', str);

  if (str && str.length > 0 && window.parent && window.parent.parent 
    && window.parent.parent.AuthorizeNetPopup && window.parent.parent.AuthorizeNetPopup.onReceiveCommunication)
  {
    window.parent.parent.AuthorizeNetPopup.onReceiveCommunication(str);
    // If you get an error with this line, it might be because the domains are not an exact match (including www).
  }
  return false;
}

function receiveMessage(event) {
  console.log('receiveMessage entry');
  if (event && event.data) {
    console.log('receiveMessage: %o', event);
    console.log('receiveMessage data: %o', event.data);
    var responseData = event.data;

    Visualforce.remoting.Manager.invokeAction(
      '{!$RemoteAction.cc_pmt_FirstData.processResponse}',
      CCRZ.pagevars.remoteContext,
      responseData,
      function(theResponse){
        console.log('processResponse results');
        responseData = JSON.parse(responseData);
        console.log('Post processResponse: %o', responseData);
        console.log('Post theResponse: %o', theResponse);

        var success = theResponse.success;
        
        var parameters = theResponse.data.parameters;
        var responseCode = theResponse.responseCode;
        var bankResponseCode = parameters.Bank_Resp_Code;
        var bankMessage = parameters.Bank_Message;
        var error = theResponse.data.error;
        // var cvv2ResultCode = theResponse.cvv2ResultCode;

        console.log('Bank Message: ' + bankResponseCode);

        if(success == false){
          console.log('Error: %o' + responseCode + ',' + bankResponseCode + ',' , parameters);
          // var pmtErr = CCRZ.processPageLabelMap('PMTFD_New');

          CCRZ.pubSub.trigger('pageMessage',{
            messages :      [{
            type:          'CUSTOM',
            severity:      'ERROR',
            classToAppend: 'fdPayment-messagingSection-Error',
            // labelId:       'PMTFD_New' }] // -- works
            message:        bankMessage }]
          }); 
          return false;
        }
        else {

          var paymentData = {
            verificationCode : responseData.x_trans_id,
            transactionCode : responseData.x_auth_code,
            accountNumber : responseData.Card_Number,
            amount : responseData.x_amount,
            accountType : 'Credit Card',
            paymentType : responseData.TransactionCardType
          };
          console.log('JSON: ' + JSON.stringify(paymentData));
          completeOrder(paymentData);

          return callParentFunction(event.data);
        }
      }
    );
      
  }
  else {
    console.log('Error processing payment');
    console.log('Error: ' + event);
    console.log('Error data: ' + event.data);
  }
    
}

if (window.addEventListener) {
  console.log('pmt page: Adding event listener');
  window.addEventListener("message", receiveMessage, false);
} else if (window.attachEvent) {
  console.log('pmt page: Attaching to event onmessage');
  window.attachEvent("onmessage", receiveMessage);
}

if (window.location.hash && window.location.hash.length > 1) {
  console.log('Calling parent function with: ' + window.location.hash.substring(1));
  callParentFunction(window.location.hash.substring(1));
}


jQuery(function($){
  console.log('cc_pmt_FirstData_Pay: page loading...');





  CCRZ.views.FirstDataView = CCRZ.CloudCrazeView.extend({
    templatePhone : CCRZ.util.template('fdTemplate'),
    templateDesktop : CCRZ.util.template('fdTemplate'),
    viewName : "fdView",
    managedSubView : true,
    selector: ".paymentTypeContainer.fd",
    events: {
      "click .showPayment" : "showPaymentForm",
      "click .submitPayment" : "submitPayment"
    },
    initPaymentForm: function(view, dorender){
      var v = this;
      Visualforce.remoting.Manager.invokeAction(
      '{!$RemoteAction.cc_pmt_FirstData.getHostedPaymentFormData}',
        CCRZ.pagevars.remoteContext,
        CCRZ.cartCheckoutModel.attributes.billingAddress.countryCode,
        function(response) {
          console.log("Response: %o", response);
          if (response.success) {
            v.model = response.data.hpf;
          }
          console.log(v.model);
          //if(dorender){
            v.render();
          //}
          //else {
            if(!dorender){
            CCRZ.pubSub.trigger('action:paymentViewInit',v);
            }
            else{
              v.render();

            }
          //}
      },
      {escape: false}
      );
    },   
    initialize: function() {
      console.log('Pay - initialize');
      var v = this;
      console.log('Payment Model: ', CCRZ.cartCheckoutModel.attributes);
      v.initPaymentForm(v, 1);
      // v.render();
      // CCRZ.pubSub.trigger('action:paymentViewInit',v);
    },
    submitForm: function(thedata){
      console.log('Going to submit');
      if (this.model && this.model.postUrl) {
        $('#hpfform').submit();
        console.log('Submitted');
      }
      else {
        console.log('No model or postUrl.')
      }
    },
    renderDesktop: function(){
      console.log('PAY - renderDesktop');
      this.setElement(this.selector);
      this.$el.html(this.templateDesktop(this.model));
      this.submitForm();
    },
    renderPhone: function(){
      this.setElement(this.selector);
      this.$el.html(this.templatePhone(this.model));
      this.submitForm();
    },
    showPaymentForm: function(){
      console.log('In showPayment');
       $('#newPayButton').hide();
       $('#fdDiv').show();
       console.log('before submit');
       $('#hpfform').submit();
       console.log('after submit');
    },
    submitPayment: function(){
       console.log('In submitPayment');
       $('#hpfform').submit();
       console.log('Submitted payment form');
     }
  });

  CCRZ.pubSub.trigger('action:paymentViewReady','fd',function(options){
    CCRZ.payment = CCRZ.payment||{views:{}};
    CCRZ.payment.views.fd = new CCRZ.views.FirstDataView({
      selector : options.selector
    });

  });

  CCRZ.pubSub.on('view:PaymentProcessorView:refresh',function(view){
    CCRZ.payment.views.fd.initPaymentForm(view, 0);
  });

});
</script>


<script>

function shortenIframe(){
  console.log("Shorten iframe entry");
    // $("#authframe").css('height', '600px');
    return false;
}
function hideSavePaymentInfo(){
  console.log("Hide save payment info entry");
    $("#labelSavePayment").css("display", "none");
    $("#save_payment_info").css("display", "none");
}


function completeOrder(result){
  console.log("Complete Order entry");
    console.log('Payment received. Completing order');
    CCRZ.pubSub.trigger('action:processPayment',result);
}

</script>
</apex:page>