<apex:page controller="Price_Req_Appr_Controller" id="thepage" sidebar="false" standardstylesheets="false">
<meta http-equiv="X-UA-Compatible" content="chrome=1"/>

<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery-1.8.3.min.js')}" type="text/javascript"/> 
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery-ui-1.9.2.custom.js')}" type="text/javascript"/>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.mobile.events.js')}" type="text/javascript"/>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.dataTables.js')}" type="text/javascript"/>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.dataTables.columnFilter.js')}" type="text/javascript"></script>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery-ui.toggleSwitch.js')}" type="text/javascript"/>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.sortElements.js')}" type="text/javascript"></script>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.dataTables.extensions.js')}" type="text/javascript"></script>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.tooltip.js')}" type="text/javascript"></script>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.multiselect.min.js')}" type="text/javascript"/> 
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.multiselect.filter.js')}" type="text/javascript"/>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.validate.js')}" type="text/javascript"/>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.form.js')}" type="text/javascript"/>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.bbq.js')}" type="text/javascript"/>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.form.wizard.js')}" type="text/javascript"/>
<script src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/js/jquery.easyui.min.js')}" type="text/javascript"></script>

<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/themes/default/easyui.css')}"/>  
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/css/jquery.tooltip.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/css/start/jquery-ui-1.10.1.custom.min.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/css/demo_table.css')}"/> 
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/themes/default/easyui.css')}"/>    
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/themes/icon.css')}"/> 
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/themes/default/menu.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/themes/default/menubutton.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/themes/default/splitbutton.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/themes/icon.css')}"/>
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/css/jquery-ui.toggleSwitch.css')}"/> 
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/css/jquery.multiselect.css')}"/> 
<apex:stylesheet value="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/css/jquery.multiselect.filter.css')}"/> 
<script  src="/soap/ajax/25.0/connection.js" type="text/javascript"></script>
<script  src="/soap/ajax/25.0/apex.js" type="text/javascript"></script>


<script type="text/javascript" charset="utf-8">
var oTable;
var aColumnIndex = new Array();
var aRow = new Array();
var asInitVals = new Array();
var sPrevAccount = '';
var iProcessing = 0;
var iLimit = 750;
var iLength = 0;
var saveflag = 'True';
var operation = '';
var CMflag;

        function fnGetColumnIndex(oSettings){
            var aColumns = new Array();
            $.each(oSettings.aoColumns, function(c){
                var mData = oSettings.aoColumns[c].sClass;
                    aColumns[mData] = c;
            });
            return aColumns;
        }
        
        function fnFormatDetails ( oTable, nTr ){
                var oSettings = oTable.fnSettings();
                var aData = oTable.fnGetData( nTr );
                var sDecoded = $('<div/>').html(aData.Inner_Table__c).text();
                return sDecoded;
        }
        
         
        function fixEscapedHTML(html, fieldid) {
          var value = $("<div />").html(html).text();
          setTimeout(function(){ $('#' + fieldid).combogrid('textbox').val(value);}, 10)}
        
                
        
        function fnSetImgListener(nRow, type){
            $('.details_img', nRow).click(function(){
                    
                    if ( this.src.match('details_close') )
                    {
                       this.src = "{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/images/details_open.png')}";
                       $('#' + type).dataTable().fnClose( nRow );
                    }else{
                       this.src = "{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/images/details_close.png')}";
                       $('#' + type).dataTable().fnOpen( nRow, fnFormatDetails(nRow, type ), 'details' ); 
                       $('.innerTable').dataTable({
                             "bDestroy": true,
                             "bPaginate": false,
                             "bLengthChange": false,
                             "bFilter": false,
                             "bSort": false,
                             "bInfo": false
                        });
                     }
              });
            }


    $(document).ready(function() { 
        
         $('#ClearFilters').click(function(){ 
           $('#approvalstable').find('.textinput, .selectinput').each(function(i, ti){ $(this).val($(this).attr('name')); 
              $('#approvalstable').dataTable().fnFilter('', aColumnIndex[$(this).attr('data-field')]);
           });
           $('#approvalstable').find('.dateinputfrom, .dateinputto, .numberinputfrom, .numberinputto').each(function(){
            $(this).val($(this).attr('name')); 
           }); 
           $('#approvalstable').dataTable().fnDraw();
           fnUpdateFilterSelect('price_maintenance', aColumnIndex);
         });
         
         
         
         oTable = $('#approvalstable').dataTable({
                "aLengthMenu": [[100, 250, 500, 750], [100, 250, 500, 750]],
                "iDisplayLength": 100,
                "bDestroy": true,
                "fnDrawCallback": function( oSettings ) {
                   $('.row_selected').removeClass('row_selected');
                   $('.row_error').removeClass('row_error');
                },
                "bSort": true,
                "sAjaxDataProp": "accounts",
                "sDom": 'lfrtip',
                "bJQueryUI": true,
                "aoColumnDefs":[
                    { "aTargets":[ "Open"], sClass:"Open" ,sWidth:"2px" },
                    { "aTargets":[ "Select"], sClass:"Select", sWidth:"2px" },
                    { "aTargets":[ "Transaction" ], "mData": "Name", sClass:"Name",sWidth:"2px", "bAutoWidth": false },
                    { "aTargets":[ "MultipleDateRequest" ], "mData": "additional_dates__c", sClass:"additional_dates__c",sWidth:"2px", "bAutoWidth": false},
                    { "aTargets":[ "Price_Support" ], "mData": "Price_Support_Exist__c", sClass:"Price_Support_Exist__c",sWidth:"2px", "bAutoWidth": false },
                    { "aTargets":[ "Inco_Terms_Description" ], "mData": "Freight_Terms__c", sClass:"Freight_Terms__c",sWidth:"2px", "bAutoWidth": false },
                    { "aTargets":[ "Approval_Status" ], "mData": "Approval_Status__c", sClass:"Approval_Status__c",sWidth:"2px" },
                    { "aTargets":[ "Approval_Level" ], "mData": "Approval_Level__c", sClass:"Approval_Level__c",sWidth:"2px" },
                    { "aTargets":[ "Approver" ], "mData": "Approver__r.Name", sClass:"Approver__r.Name",sWidth:"2px" },            
                    { "aTargets":[ "Type" ], "mData": "Type__c", sClass:"Type__c",sWidth:"2px" },            
                    { "aTargets":[ "Created_By" ], "mData": "Owner.Name", sClass:"Owner.Name",sWidth:"2px" },            
                    { "aTargets":[ "CM" ], "mData": "CM_Value__c", sClass:"CM_Value__c",sWidth:"2px" },            
                    { "aTargets":[ "Unit_CM" ], "mData": "Unit_Contribution_Margin__c", sClass:"Unit_Contribution_Margin__c",sWidth:"2px" },            
                    { "aTargets":[ "Sold_To" ], "mData": "SAP_SoldTo_Account__c", sClass:"SAP_SoldTo_Account__c",sWidth:"2px" },            
                    { "aTargets":[ "Ship_To" ], "mData": "SAP_ShipTo_Account__c", sClass:"SAP_ShipTo_Account__c",sWidth:"2px" },            
                    { "aTargets":[ "Material" ], "mData": "Material__c", sClass:"Material__c",sWidth:"4px" },            
                    { "aTargets":[ "Plant" ], "mData": "Plant__c", sClass:"Plant__c", sWidth:"2px" },            
                    { "aTargets":[ "Start_Date" ], sClass:"Requested_Effective_Date__c",sWidth:"2px", "bAutoWidth": false,
                      "mData": function ( source, type, val ) {
                          if (type === 'set') {
                              return;
                          }
                          else if (type === 'display') { 
                            if (source.Requested_Effective_Date__c != '' && source.Requested_Effective_Date__c != null){
                                 var CSPDate = new Date(source.Requested_Effective_Date__c);
                                 if('{!DateFormat}' == 'mm/dd/yy')
                                    return (CSPDate.getUTCMonth()+1) + "/" + CSPDate.getUTCDate() + "/" + CSPDate.getUTCFullYear();
                                  else{
                                    return CSPDate.getUTCDate() + "/" + (CSPDate.getUTCMonth()+1) + "/" + CSPDate.getUTCFullYear();
                                  }
                                 }
                            else return '';
                            
                          }
                          else if (type === 'filter') {  return source.Requested_Effective_Date__c; }
                          else if (type === 'sort') { 
                           if((typeof source.Requested_Effective_Date__c == 'undefined') || source.Requested_Effective_Date__c == null)
                              return '';
                            else 
                             return new Date(source.Requested_Effective_Date__c);
                          }
                          return source.Requested_Effective_Date__c;
                      }
                    },
                    { "aTargets":[ "Expiration_Date" ], sClass:"Requested_Expiration_Date__c",sWidth:"2px", "bAutoWidth": false,
                      "mData": function ( source, type, val ) {
                          if (type === 'set') {
                              return;
                          }
                          else if (type === 'display') { 
                            if (source.Requested_Expiration_Date__c != '' && source.Requested_Expiration_Date__c != null){
                                 var CSPDate = new Date(source.Requested_Expiration_Date__c);
                                 if('{!DateFormat}' == 'mm/dd/yy')
                                    return (CSPDate.getUTCMonth()+1) + "/" + CSPDate.getUTCDate() + "/" + CSPDate.getUTCFullYear();
                                  else{
                                    return CSPDate.getUTCDate() + "/" + (CSPDate.getUTCMonth()+1) + "/" + CSPDate.getUTCFullYear();
                                  }
                                 }
                            else return '';
                            
                          }
                          else if (type === 'filter') {  return source.Requested_Expiration_Date__c; }
                          else if (type === 'sort') { 
                           if((typeof source.Requested_Expiration_Date__c == 'undefined') || source.Requested_Expiration_Date__c == null)
                              return '';
                            else 
                             return new Date(source.Requested_Expiration_Date__c);
                          }
                          return source.Requested_Expiration_Date__c;
                      }
                    },
                    
                   { "aTargets":[ "EOQ" ], sClass:"quantity__c",sWidth:"2px", "bAutoWidth": false,
                      "mData": function ( source, type, val ) {
                          if (type === 'set') {
                              return;
                          }
                          else if (type === 'display') { 
                          if(source.Quantity__c == '' || source.Quantity__c == null || typeof source.Quantity__c == 'undefined')
                           return;
                          else
                           return source.Quantity__c.toFixed(0);
                          
                          }
                          else if (type === 'filter') {  return source.Quantity__c; }
                          else if (type === 'sort') { return source.Quantity__c; }
                          return source.Quantity__c;
                      }
                    },
                    
                    { "aTargets":[ "Volume" ], "mData": "Volume__c", sClass:"Volume__c", sWidth:"2px" },            
                    { "aTargets":[ "Volume_UoM" ], "mData": "Requested_UoM__c", sClass:"Requested_UoM__c",sWidth:"2px" },            
                    { "aTargets":[ "Price" ], sClass:"Price__c",sWidth:"2px", "bAutoWidth": false, 
                      "mData": function ( source, type, val ) {
                        if (type === 'set') {
                              return;
                          }
                          else if (type === 'display' || type == 'sort' || type == 'filter') { 
                             if(source.Price__c == '' || source.Price__c == null || typeof source.Price__c == 'undefined')
                               return;
                             else
                             return source.Price__c.toFixed(4);
                          }
                          return source.Price__c;
                      } 
                    
                    
                    
                    
                    },            
                    { "aTargets":[ "Price_UoM" ], "mData": "Requested_Price_UoM__c", sClass:"Requested_Price_UoM__c",sWidth:"2px" },            
                    { "aTargets":[ "TPI" ], sClass:"TPI__c",sWidth:"2px",
                      "mData": function ( source, type, val ) {
                          if (type === 'set') {
                              return;
                          }
                          else if (type === 'display') { 
                            if((typeof source.TPI__c == 'undefined') || source.TPI__c == null)
                              return '';
                            else 
                              return (source.TPI__c + '%');
                          }
                          else if (type === 'filter') {  return source.TPI__c; }
                          else if (type === 'sort') { return source.TPI__c; }
                          return source.TPI__c;
                      }
                    },
                    
                    { "aTargets":[ "Price_Protection_Changed" ], "mData": "Price_Protection_Changed_Value__c", sClass:"Price_Protection_Changed_Value__c",sWidth:"2px" },            
                    { "aTargets":[ "Comments" ], "mData": "Comments__c", sClass:"Comments__c",sWidth:"2px" },            
                    { "aTargets":[ "Approval_Comments" ], "mData": "Approval_Rejection_Comments__c", sClass:"Approval_Rejection_Comments__c",sWidth:"2px" },            
                    { "aTargets":[ "Coordinator_Comments__c" ], "mData": "Coordinator_Comments__c", sClass:"Coordinator_Comments__c",sWidth:"2px" },
                    { "aTargets":[ "OEM" ], "mData": "OEM__c", sClass:"OEM",sWidth:"2px" },

                    { "aTargets":[ "Id" ],"mData": "Id", sClass:"Id", bVisible: false,sWidth:"2px"},
                    { "aTargets":[ "Inner_Table" ],"mData": "Inner_Table__c", sClass:"Inner_Table__c",sWidth:"2px", "bVisible":false},
                    { "aTargets":[ "Prospect_Material" ], "mData": "Prospect_Material__c", sClass:"Prospect_Material__c",sWidth:"2px", "bAutoWidth": false,"bVisible":false },
                    
                  ],
                  
                 "fnInitComplete": function(oSettings) {
                     aColumnIndex = fnGetColumnIndex(oSettings);
                  },
                  
                  
                "fnCreatedRow": function( nRow, aData, iDataIndex ) {
                      $('td:eq(0)', nRow).html( '<img src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/images/details_open.png')}">');
                      $('td:eq(1)', nRow).html( '<input type="checkbox" name="Ids" class="SelectedIds" value="'+ aData.Id+'">');
                      
                      fnEvaluateTable($('#approvalstable' ).dataTable());
                      fnSetCheckboxListener(nRow, $('#approvalstable' ).dataTable());
                 },
                    
              });//end of 'approvalstable'
       
            fnPrepFilters('approvalstable');
            
            $('#SelectAll').click(function(){ $('#approvalstable ').find('input:checkbox').not('input[disabled="disabled"]').attr('checked', 'checked'); fnEvaluateTable($('#approvalstable' ).dataTable()); });
            $('#Reset').click(function(){ $('#approvalstable ').find('input:checkbox').not('input[disabled="disabled"]').removeAttr('checked'); fnEvaluateTable($('#approvalstable' ).dataTable());});
            $('#sb1,#sb2').splitbutton({plain:false});
          
                     
            $('#approve').click(function(){
             if($('#mm1').menu('findItem', 'Approve Records').disabled == false){
                var oTable = $('#approvalstable').dataTable();
                var expiredDate = 0;
                $(".SelectedIds").each(function(i, v){
                if($(this).attr("checked") == "checked")
                {   
                    var nTr = this.parentNode.parentNode;
                    aData = oTable.fnGetData( nTr );
                    var expDate = new Date(aData.Requested_Expiration_Date__c);
                    expDate = new Date(expDate.getUTCFullYear(),expDate.getUTCMonth(),expDate.getUTCDate());
                    var currentDate = new Date();
                    currentDate  = new Date(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate());
                    if(expDate < currentDate){
                        expiredDate++;
                    }
                }});
                if(expiredDate == 0){
                    var sData = oTable.$('input').serialize();
                    $('#apprids').val(sData);
                    $('#dd').dialog('open');
                }
                else {
                    alert('Date validity over for this Price Request Transaction. Please update the dates by Rejecting with Alternate.');
                }
             }
             });
        
            $('#dd').dialog({  
              title: 'Approve Records',  
              width: 475,  
              height: 325,  
              closed: true,  
              cache: false, 
              modal: true,
              toolbar:[{
                    text:'Approve',
                    iconCls:'icon-save',
                    handler:function(){

                    Price_Req_Appr_Controller.approverecords($('#apprids').val(),$('#approvalcomments').val(),function(result, event){ 
                                            if(event.type == 'exception') {
                                                
                                            }
                                            
                                            }, {buffer: true, escape: true, timeout:120000}); 
                    
                    
                    $('#dd').dialog('close');
                    $('#approvalcomments').val('');
                    oTable.fnClearTable();
                    FetchApprovalTable();
                    
                     }
                    
                }]
                  
            });
            
            <!-- DD3 ---------------------------------------------------->
            
           

 $('#dd3').dialog({  
          title: 'Email Supplier',     
          closed: true,  
          cache: false, 
          modal: true,
          width:800,  
          height:400, 
          collapsible: true,
          maximizable: true,
          maximized: true,                 
          toolbar:[{
                text:'Send',
                iconCls:'icon-save',
                handler:function(){
                var bValid = $('#plform').form('validate');
               
                if(bValid == true)
                { 
                  
                   Price_Req_Appr_Controller.sendemailsupplier($('#plform').serialize(),$('#frameid').attr('data-page'),function(result, event){ 
                          if(event.type == 'exception') {
                      
                            }  
                      else{
                            $('#dd3').dialog('close');
                            window.location.reload(); }
                             }, {buffer: true, escape: true, timeout:120000});
                }
              }
            },{
                text:'Cancel',
                iconCls:'icon-cancel',
                handler:function(){$('#dd3').dialog('close');}                

            },
            {}]   
            
 });
        
            
            
            
            
            <!-- End DD3 ------------------------------------------------->
            <!--Code for Reassigning approver*/-->
            
            $('#reassign').click(function() {
                
                if($('#mm1').menu('findItem', 'Reassign Approver').disabled == false){
                    var oTable = $('#approvalstable').dataTable();
                    var sData = oTable.$('input').serialize();
                    $('#apprids').val(sData);
                        $('#dd2').dialog('open'); 
                }
            });
            
              $('#dd2').dialog({  
              title: 'Reassign Records',  
              width: 475,  
              height: 325, 
              closed: true, 
              cache: false, 
              modal: true,
              toolbar:[{
                    text:'Save',
                    iconCls:'icon-ok',
                    handler:function(){
                        var lookUpValue = $('#UserLookup').combogrid('getValue');
                        if( lookUpValue!= ''){
                            Price_Req_Appr_Controller.reassignupdate($('#apprids').val(),$('#UserLookup').combogrid('getValue'),function(result, event){
                            
                                if(event.type == 'exception') {
                                
                                }
                                
                            }, {buffer: true, escape: true, timeout:120000});
                            $('#dd2').dialog('close');
                            $('#UserLookup').combogrid('clear');
                            
                            oTable.fnClearTable();
                            FetchApprovalTable();
                        
                         }
                     }
                },{
                text:'Cancel',
                iconCls:'icon-cancel',
                handler:function(){
                $('#dd2').dialog('close');
                $('#UserLookup').combogrid('clear');
               
                }
                }]   
            });
            
            $('#UserLookup').combogrid({  
                panelWidth:200, 
                width:200, 
                delay: 500,  
                idField:'Approver__c',  
                textField:'Approver_Name__c', 
                hasDownArrow: true,
                required: true,
                keyHandler: {
                  query: function(q){
                          var g = $(this).combogrid('grid');
                          Price_Req_Appr_Controller.getApproversList(q, function(result, event){
                            if(event.type == 'exception') {
                              error.apply(this, arguments);         
                            } else {      
                              g.datagrid('loadData', result);         
                            }
                          }, {buffer: true, escape: true, timeout:120000});
                   }
                },
                columns:[[  
                       {field:'Approver_Name__c',title:'Name',width:300, sortable:true, sorter: function(a, b){
                         var va = (a === null) ? "" : "" + a,
                         vb = (b === null) ? "" : "" + b;
                         return va > vb ? 1 : ( va === vb ? 0 : -1 );
                       }} 
                ]],
                onLoadSuccess: function(param){ fixEscapedHTML($('#UserLookup').combogrid('getText'), 'UserLookup');
                
                 }    ,
                
                loader: function(param,success,error){
                    Price_Req_Appr_Controller.getApproversList('', function(result, event){
        
                     if(event.type == 'exception') {
                        error.apply(this, arguments);         
                     } else {      
                       success(result);         
                     }
                 }, {buffer: true, escape: true, timeout:120000});
                },
                onSelect: function(param){ fixEscapedHTML($('#UserLookup').combogrid('getText'), 'UserLookup');
                
                 }    
            });
            
           $('#UserLookup').combogrid('textbox').focusin(function(){ 
           $('#UserLookup').combogrid('clear');
             });
           $('#UserLookup').combogrid('setValue', $('#UserLookup').attr('UserLookup'));
           fixEscapedHTML($('#UserLookup').attr('UserLookup'), 'UserLookup');
            
            
            <!--Code for Reassigning approver ends */-->
            <!-- Code for Pending Supplier */-->
           
            $("#pendingsupplier").click(function() {
                 if($('#mm1').menu('findItem', 'Pending Supplier').disabled == false){
                 var oTable = $('#approvalstable').dataTable();
                 var sData = oTable.$('input:checked').serialize();
                 var nSize = oTable.$('input:checked').size();
                 Price_Req_Appr_Controller.pendingsupplier(sData,function(result, event){
                     if(event.type == 'exception') {
                        alert(result);         
                     } else {
                        window.location.reload();         
                     }
                 });
            }});
            
            <!-- Code for Pending Supplier end */-->
            
            <!-- Code for Reject PRT */-->            
        
            $("#rejectprt").click(function(){
             if($('#mm1').menu('findItem', 'Reject PRT').disabled == false){
                var oTable = $('#approvalstable').dataTable();
                var expiredDate = 0;
                $(".SelectedIds").each(function(i, v){
                if($(this).attr("checked") == "checked")
                {   
                    var nTr = this.parentNode.parentNode;
                    aData = oTable.fnGetData( nTr );
                    var expDate = new Date(aData.Requested_Expiration_Date__c);
                    expDate = new Date(expDate.getUTCFullYear(),expDate.getUTCMonth(),expDate.getUTCDate());
                    var currentDate = new Date();
                    currentDate  = new Date(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate());
                    if(expDate < currentDate){
                        expiredDate++;
                    }
                }});
                if(expiredDate == 0){
                    var sData = oTable.$('input').serialize();
                    $('#apprids').val(sData);
                    $('#dd6').dialog('open');
                }
                else {
                    alert('Date validity over for this Price Request Transaction. Please update the dates by Rejecting with Alternate.');
                }
             }
             });
        
            $('#dd6').dialog({  
              title: 'Reject Records',  
              width: 475,  
              height: 325,  
              closed: true,  
              cache: false, 
              modal: true,
              toolbar:[{
                    text:'Reject',
                    iconCls:'icon-save',
                    handler:function(){

                    Price_Req_Appr_Controller.rejectprt($('#apprids').val(),$('#rejectcomments').val(),function(result, event){ 
                                            if(event.type == 'exception') {
                                                
                                            }
                                            
                                            }, {buffer: true, escape: true, timeout:120000}); 
                    
                    
                    $('#dd6').dialog('close');
                    $('#rejectcomments').val('');
                    oTable.fnClearTable();
                    FetchApprovalTable();
                    
                     }
                    
                }]
                  
            });
            
            <!-- Code for Reject PRT end */-->
            <!-- Email Supplier -->
            
            $('#emailsupplier').click(function(){
   if($('#mm1').menu('findItem', 'Email Supplier').disabled == false)
   {      
         var oTable = $('#approvalstable').dataTable();
         var sData = oTable.$('input').serialize();
         var nSize = oTable.$('input:checked').size();

        if(nSize > 1)
                 { alert('Email Supplier is allowed for only one record at a time.'); }
          else
          {
          var aaSelected = new Array();
          $('#approvalstable tr input').each(function(){ 
                if($(this).prop('checked') == true){
                    aaSelected.push($(this).val());
                }
          });
          
        Price_Req_Appr_Controller.pricesupportdata(aaSelected,function(result, event){ 
          if(event.type == 'exception') {
            
          }else{
              
            fnOpenPriceSupplier(aaSelected);
            
          }
           }, {buffer: true, escape: true, timeout:120000});
   }
   }
 });
 
            
            
            <!-- End Email Supplier -->
                        
            $('#approvalstable tbody td img, .formtable tbody td img').live('click', function () {
            var nTr = this.parentNode.parentNode;
            var oTable = $(nTr.parentNode.parentNode).dataTable();
            var iRows = oTable.fnSettings().fnRecordsTotal();
            var iHeight = oTable.fnSettings().oScroll.sY;
            if ( this.src.match('details_close') )
            {
                this.src = "{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/images/details_open.png')}";
                oTable.fnClose( nTr );
                iHeight = iHeight - 125;
            }
            else
            {
                this.src = "{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/images/details_close.png')}";
                oTable.fnOpen( nTr, fnFormatDetails(oTable, nTr), 'details' ); 
                $('.innerTable').dataTable({
                "bDestroy": true,
                "bPaginate": false,
                "bLengthChange": false,
                "bFilter": false,
                "bSort": false,
                "bInfo": false
                });
                iHeight = iHeight + 125;
            }

                      if(iHeight >= 75 && iHeight < 400 && oTable.fnSettings().oScroll.sY < 400)
                      {  oTable.fnSettings().oScroll.sY = iHeight;
                         $(oTable).parent().height(iHeight);
                      }
                      if(iHeight > 400 || oTable.fnSettings().oScroll.sY > 400)
                      {
                         oTable.fnSettings().oScroll.sY = 400;
                         $(oTable).parent().height(400);
                      }
         } );
         
         $( "#rejectalternateMult" ).click(function() {
         if($('#mm1').menu('findItem', 'Reject Alternate with Multiple Dates').disabled == false){
                 var oTable = $('#approvalstable').dataTable();
                 var sData = oTable.$('input:checked').serialize();
                 var nSize = oTable.$('input:checked').size();

                 if(nSize > 1)
                 { alert('Reject with Alternate is allowed for only one record at a time.'); }
                 else
                  { 
                     $(".SelectedIds").each(function(i, v){
                     if($(this).attr("checked") == "checked")
                     {   var nTr = this.parentNode.parentNode;
                         aData = oTable.fnGetData( nTr );
                     }});
                     
                     if(aData.Type__c != 'RFQ'){  
                         
                         $('#loadtarget').load('/apex/CSP_Reject_Alternate_Form?'+sData, function() {
                                 fnInitForm('Static');
                                 var freightval = $('#freight').combobox('getText');
                                 $('#freightval').val(freightval);
                                 fnverifySubmit(); 
                                 
                                 /*$('#createform').ajaxForm({  
                                    dataType: 'json', 
                                    beforeSubmit: beforeSubmit });
                                 ($('#createform').formSerialize());
                                 $("#createform").validate({
                                    errorPlacement: function(error, element){
                                       error.insertAfter(element.parent().find('.error_container'));
                                       error.css('color', 'red'); 
                                    }
                                 });
                                 jQuery.validator.addMethod("currency", function(value, element) { 
                                 var curr = $("#currencies").combobox('getValue'); 
        
                                    if(curr == 'USD' || curr == 'CAD')
                                        return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{2})?|[1-9]{1}[0-9]{0,}(\.[0-9]{2})?|0(\.[0-9]{2})?|(\.[0-9]{2})?)$/.test(value);         
                                    else
                                        return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{4})?|[1-9]{1}[0-9]{0,}(\.[0-9]{4})?|0(\.[0-9]{4})?|(\.[0-9]{4})?)$/.test(value);         
                                    },   "Please enter a valid number."); */
                             });    
                                                  
                      
                     }
                    
                  }
                 }
              });
         
   $('#rejectaltPSR').click(function(){
     if($('#mm1').menu('findItem', 'Reject with Alternate PRT and Create/Modify Support').disabled == false)
     {
         //fnDisablefilter('approvalstable');
         fnpsr();
         var oTable = $('#approvalstable').dataTable();
         $(".select_row").each(function(i, v){
         if($(this).attr("checked") == "checked")
         {   var nTr = this.parentNode.parentNode;
             aData = oTable.fnGetData( nTr );
          }});
          operation = 'rejaltPSR';
          
         if(aData.Price_Support_Exist__c == 'Yes')
             $('#psr').dialog('open'); 
         else{
             var sData = oTable.$('input:checked').serialize();
             $('#loadtarget').load('/apex/Reject_Alternate_Form_with_PSR?' + sData , function() {
             fninitformpsr();
             fnInitForm('Static');
             var freightval = $('#freight').combobox('getText');
             $('#freightval').val(freightval);
             fnverifySubmit(); });
             } 
         }
     });  
     
     $('#apprPSR').click(function(){
     if($('#mm1').menu('findItem', 'Approve PRT and Create/Modify Support').disabled == false)
     {
         //fnDisablefilter('approvalstable');
         fnpsr();
         var oTable = $('#approvalstable').dataTable();
         $(".select_row").each(function(i, v){
         if($(this).attr("checked") == "checked")
         {   var nTr = this.parentNode.parentNode;
             aData = oTable.fnGetData( nTr );
          }});
         operation = 'appPSR';
         if(aData.Price_Support_Exist__c == 'Yes')
             $('#psr').dialog('open'); 
         else{
             var sData = oTable.$('input:checked').serialize();
             $('#loadtarget').load('/apex/Approve_with_PSR?' + sData, function() {
             fninitformpsr();
             fnappInitForm();
             });
           } 
         }
     });  
  
        $('#psr').dialog({  
              title: 'Select Supplier',  
              width: 475,  
              height: 125, 
              closed: true, 
              cache: false, 
              modal: true,
              toolbar:[{
                    text:'Save',
                    iconCls:'icon-ok',
                    handler:function(){
                    var psId = $('#psrsupp').combogrid('getValue');
                    
                     if(psId == null || psId == ''){
                             alert('Please select the supplier.');
                         }
                         else{
                         $('#psr').dialog('close');
                         var oTable = $('#approvalstable').dataTable();
                         var sData = oTable.$('input:checked').serialize();
                        
                         if(operation == 'appPSR'){
                             $('#loadtarget').load('/apex/Approve_with_PSR?' + sData + '&psId=' + psId, function() {
                             fninitformpsr();
                             fnappInitForm();
                              });
                             }
                         else{
                            $('#loadtarget').load('/apex/Reject_Alternate_Form_with_PSR?' + sData + '&psId=' + psId, function() {
                             fninitformpsr();
                             fnInitForm('Static');
                             var freightval = $('#freight').combobox('getText');
                             $('#freightval').val(freightval);
                             fnverifySubmit(); });                            
                          } }   
                     }
                },{
                text:'Cancel',
                iconCls:'icon-cancel',
                handler:function(){
                $('#psr').dialog('close');
                $('#psrsupp').combogrid('clear');
                //fnEnablefilter('approvalstable');
                }
                }]   
            }); 
         

        $( "#rejectalternate" ).click(function() {
         if($('#mm1').menu('findItem', 'Reject With Alternate').disabled == false){
                 var oTable = $('#approvalstable').dataTable();
                 var sData = oTable.$('input:checked').serialize();
                 var nSize = oTable.$('input:checked').size();

                 if(nSize > 1)
                 { alert('Reject with Alternate is allowed for only one record at a time.'); }
                 else
                  { 
                     $(".SelectedIds").each(function(i, v){
                     if($(this).attr("checked") == "checked")
                     {   var nTr = this.parentNode.parentNode;
                         aData = oTable.fnGetData( nTr );
                     }});
                                             
                     
                     
                     if(aData.Type__c != 'RFQ'){  
                         if(aData.additional_dates__c == 'Yes'){
                             
                             $('#loadtarget').load('/apex/CSP_Reject_Alternate_Form?'+sData, function() {
                                 fnInitForm('Static'); 
                                 var freightval = $('#freight').combobox('getText');
                                 $('#freightval').val(freightval);
                                 fnverifySubmit();
                                 
                                 /*$('#createform').ajaxForm({  
                                    dataType: 'json', 
                                    beforeSubmit: beforeSubmit });
                                 ($('#createform').formSerialize());
                                 $("#createform").validate({
                                    errorPlacement: function(error, element){
                                       error.insertAfter(element.parent().find('.error_container'));
                                       error.css('color', 'red'); 
                                    }
                                 });
                                 jQuery.validator.addMethod("currency", function(value, element) { 
                                 var curr = $("#currencies").combobox('getValue'); 
        
                                if(curr == 'USD' || curr == 'CAD')
                                    return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{2})?|[1-9]{1}[0-9]{0,}(\.[0-9]{2})?|0(\.[0-9]{2})?|(\.[0-9]{2})?)$/.test(value);         
                                else
                                    return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{4})?|[1-9]{1}[0-9]{0,}(\.[0-9]{4})?|0(\.[0-9]{4})?|(\.[0-9]{4})?)$/.test(value);         
                                },   "Please enter a valid number."); */
                             });    
                         }                         
                       else{
                          
                         $('#loadtarget').load('/apex/Reject_Alternate_Form?'+sData, function() {
                            fnInitForm('Static');
                            fnverifySubmit();
                            /*var freightval = $('#freight').combobox('getText');
                            $('#freightval').val(freightval);
                            $('#createform').ajaxForm({  
                                dataType: 'json', 
                                beforeSubmit: beforeSubmit });
                            ($('#createform').formSerialize());
                            $("#createform").validate({
                                errorPlacement: function(error, element){
                                   error.insertAfter(element.parent().find('.error_container'));
                                   error.css('color', 'red'); 
                                }
                             });
                            jQuery.validator.addMethod("currency", function(value, element) { 
                           var curr = $("#currencies").combobox('getValue'); 
        
                            if(curr == 'USD' || curr == 'CAD')
                                return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{2})?|[1-9]{1}[0-9]{0,}(\.[0-9]{2})?|0(\.[0-9]{2})?|(\.[0-9]{2})?)$/.test(value);         
                            else
                                return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{4})?|[1-9]{1}[0-9]{0,}(\.[0-9]{4})?|0(\.[0-9]{4})?|(\.[0-9]{4})?)$/.test(value);         
                             }, "Please enter a valid number.");*/
                        });
                      }
                     }
                     else{
                         $('#loadtarget').load('/apex/RFQ_Reject_Alternate_Form?'+sData, function() {
                             fnInitForm('Static'); 
                            $('#createform').ajaxForm({  
                                dataType: 'json', 
                                beforeSubmit: beforeSubmit });
                          ($('#createform').formSerialize());
                          $("#createform").validate({
                                errorPlacement: function(error, element){
                                   error.insertAfter(element.parent().find('.error_container'));
                                   error.css('color', 'red'); 
                                }
                          });
                          jQuery.validator.addMethod("currency", function(value, element) { 
                          var curr = $("#currencies").combobox('getValue'); 
                            
                            if(curr == 'USD' || curr == 'CAD')
                                return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{2})?|[1-9]{1}[0-9]{0,}(\.[0-9]{2})?|0(\.[0-9]{2})?|(\.[0-9]{2})?)$/.test(value);         
                            else
                                return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{4})?|[1-9]{1}[0-9]{0,}(\.[0-9]{4})?|0(\.[0-9]{4})?|(\.[0-9]{4})?)$/.test(value);         
                             }, "Please enter a valid number."); 
                            
                            jQuery.validator.addMethod("isText", function(value, element) { 
                              return this.optional(element) || /^[a-zA-Z]/.test(value); 
                           }, "Please enter valid text.");   
                         });        
                     }
                  }
                 }
              });
              
      FetchApprovalTable();
      if('{!$CurrentPage.parameters.Flag}' == 'True')
        {
            var oTable = $('#approvalstable').dataTable();
            oTable.fnFilter('{!$Currentpage.parameters.Name}', 19);
            $('input[data-field="Name"]').val('{!$Currentpage.parameters.Name}');
            
        }
        
        
        
      }); 
      
    function beforeSubmit(formData, jqForm, options){
        
        $(formData).each(function(i, data){ 
           if(data.name == 'effdate')
             data.value = Date.parse($('#edate').datepicker('getDate'));
           if(data.name == 'exdate')
             data.value = Date.parse($('#exdate').datepicker('getDate'));
           if(data.name == 'effdatenext')
             data.value = Date.parse($('#edatenext').datepicker('getDate'));
           if(data.name == 'exdatenext')
             data.value = Date.parse($('#exdatenext').datepicker('getDate')); 
             
           if(data.name == 'psreffdate')
             data.value = Date.parse($('#psreffdate').datepicker('getDate'));
           if(data.name == 'psrexpdate')
             data.value = Date.parse($('#psrexpdate').datepicker('getDate')); 
             
        });
        
        
        startSimulate(formData, $('#formtype').val());
        return false;}    
        
        function FetchApprovalTable(){
             Price_Req_Appr_Controller.FetchApprovalTable(function(result, event){ 
              if(event.type == 'exception') {
                    
              } else { 
                if(result.length > 0){     
                  oTable = $('#approvalstable').dataTable();
                  oTable.fnAddData(result);
                  fnUpdateFilterSelect('approvalstable');  }
               }
             }, {buffer: true, escape: true, timeout:120000});
        }
    
        function fnSetCheckboxListener(nRow, oTable){
          $(nRow).find('input:checkbox').click(function(){
              fnEvaluateTable(oTable);
          });
        }
        
        function fnEvaluateTable(oTable){
        
          var item1 = $('#mm1').menu('findItem', 'Approve Records');
          var item2 = $('#mm1').menu('findItem', 'Reject With Alternate');
          var item3 = $('#mm1').menu('findItem', 'Reassign Approver');
          var item4 = $('#mm1').menu('findItem', 'Reject Alternate with Multiple Dates');
          var item5 = $('#mm1').menu('findItem', 'Pending Supplier');
          var item6 = $('#mm1').menu('findItem', 'Reject PRT');   
          var item7 = $('#mm1').menu('findItem', 'Approve PRT and Create/Modify Support');
          var item8 = $('#mm1').menu('findItem', 'Reject with Alternate PRT and Create/Modify Support');
      var item9 = $('#mm1').menu('findItem', 'Email Supplier');
          
          var iSelected = 0;
          var enableMultiReject = 0;
          
          $(".SelectedIds").each(function(i, v){
          
              $('#mm1').menu('enableItem', item4.target); 
              
               if($(this).attr("checked") == "checked")
               { 
                   var nTr = this.parentNode.parentNode;
                   aData = oTable.fnGetData( nTr );
                   if(aData.Type__c != 'RFQ')
                       enableMultiReject++;
                   iSelected ++;
               }      
          });
          if(iSelected == 0) 
            {   
                $('#mm1').menu('disableItem', item1.target);
                $('#mm1').menu('disableItem', item2.target);
                $('#mm1').menu('disableItem', item3.target); 
                $('#mm1').menu('disableItem', item4.target);  
                $('#mm1').menu('disableItem', item5.target); 
                $('#mm1').menu('disableItem', item6.target);
                $('#mm1').menu('disableItem', item7.target);
                $('#mm1').menu('disableItem', item8.target);   
        $('#mm1').menu('disableItem', item9.target);            
            }
          else
            {       
               $('#mm1').menu('enableItem', item1.target);
               $('#mm1').menu('enableItem', item2.target);
               $('#mm1').menu('enableItem', item3.target);
               $('#mm1').menu('enableItem', item5.target);
               $('#mm1').menu('enableItem', item6.target);
               
               
               if(iSelected == 1 && enableMultiReject == 1){
                   $('#mm1').menu('enableItem', item4.target); 
                   if(aData.Type__c == 'CSP'){
                   $('#mm1').menu('enableItem', item7.target);
                   $('#mm1').menu('enableItem', item8.target);}}
               else{ 
                   $('#mm1').menu('disableItem', item4.target);
                   $('#mm1').menu('disableItem', item7.target);
                   $('#mm1').menu('disableItem', item8.target);
                   }
            if(iSelected == 1)
                 $('#mm1').menu('enableItem', item9.target);
                 
               else
                  $('#mm1').menu('disableItem', item9.target);
            }
        }
    
    
        function fnUpdateFilterSelect(stableid){
            $('#' + stableid).find('.selectinput').each(function(i, sel){
            
              var val = $(sel).val();
              $(sel).empty();
              
              var opt = '<option value=""';
              if(val == $(sel).attr('name'))
              opt += ' selected="selected" ';
              opt += '>' + $(sel).attr('name') + '</option>';
              var arr = $('#' + stableid).dataTable().fnGetColumnData(aColumnIndex[$(sel).attr('data-field')]);
              $(arr).each(function(j, o){
                opt = opt + '<option value="' + o + '"';
                if(val == o)
                opt += ' selected="selected" ';
                opt += '>' + o + '</option>';
              });
              $(sel).append(opt);
             
            });
        }    
        function fnPrepFilters(stableid){
      
            $('#' + stableid).find('.textfilter').each(function(i, f){ $(f).html('<div style="width:105px;"><input data-field="'+ $(f).attr('data-field') +'" class="textinput" value="' + $(f).html() + '" name="' + $(f).html() + '" style="width:100px;"/></div>') });
            $('#' + stableid).find('.numberfilter').each(function(i, f){ $(f).html('<div class="numberinput" data-field="'+ $(f).attr('data-field') +'" style="width:105px;"><input data-field="'+ $(f).attr('data-field') +'" class="numberinputfrom" value="From ' + $(f).html() + '" name="From ' + $(f).html() + '" style="width:50px;"/><b>&nbsp;To&nbsp;</b><input class="numberinputto" value="To ' + $(f).html() + '" name="To ' + $(f).html() + '" style="width:50px;"/></div>') });
            $('#' + stableid).find('.datefilter').each(function(i, f){ $(f).html('<div class="dateinput" style="width:155px;" data-field="'+ $(f).attr('data-field') +'"><input class="dateinputfrom" name="From ' + $(f).html() + '" value="From ' + $(f).html() + '" style="width:75px;"/><b>&nbsp;To&nbsp;</b><input class="dateinputto" value="To ' + $(f).html() + '" name="To ' + $(f).html() + '" style="width:75px;"/></div>') });
            $('#' + stableid).find('.listfilter').each(function(i, f){ $(f).html('<div style="width:105px;"><select data-field="'+ $(f).attr('data-field') +'" class="selectinput" name="' + $(f).html() + '" style="width:100px;"><option selected="selected" value="' + $(f).html() + '">' + $(f).html() + '</option></select></div>') });
            $( ".dateinputfrom, .dateinputto" ).datepicker({changeMonth:true, changeYear:true, dateFormat: "{!dateFormat}"});
            fnUpdateFilterSelect(stableid);
            $('.selectinput').change(function(){
               if($(this).val() == $(this).attr('name'))
               {   $('#' + stableid).dataTable().fnFilter('', aColumnIndex[$(this).attr('data-field')] ); }
               else
               {   $('#' + stableid).dataTable().fnFilter( $(this).val(), aColumnIndex[$(this).attr('data-field')] );  }
               fnUpdateFilterSelect(stableid);
              });
            $(".textinput").keyup( function () { $('#' + stableid).dataTable().fnFilter( this.value, aColumnIndex[$(this).attr('data-field')] ); fnUpdateFilterSelect(stableid); });
            $(".textinput, .numberinputfrom, .numberinputto, .dateinputfrom, .dateinputto").focus( function () { if( $(this).val() == $(this).attr('name') ){ this.value = "";}});
            $(".textinput, .numberinputfrom, .numberinputto, .dateinputfrom, .dateinputto").blur( function (i) { if( $(this).val() == "" ){ this.value = $(this).attr('name'); }});
            $('.numberinputfrom, .numberinputto').keyup(function(){ $('#' + stableid).dataTable().fnDraw(); fnUpdateFilterSelect(stableid);});
            $('.dateinputfrom, .dateinputto').change(function(){ $('#' + stableid).dataTable().fnDraw(); fnUpdateFilterSelect(stableid); });
            $(".numberinput").each(function(i, ni){
              $('#' + stableid).dataTable().dataTableExt.afnFiltering.push(
                function (oSettings, aData, iDataIndex) {
                                if ($('#' + stableid).dataTable().attr("id") != oSettings.sTableId){ return true; }
                                var iMin = $(ni).find('.numberinputfrom').val();
                                var iMax = $(ni).find('.numberinputto').val();
                                var iValue = (isNaN(aData[aColumnIndex[$(ni).attr('data-field')]]) || aData[aColumnIndex[$(ni).attr('data-field')]] == null || aData[aColumnIndex[$(ni).attr('data-field')]] == "")? -1 : aData[aColumnIndex[$(ni).attr('data-field')]];
                                if ((iMin == "" || isNaN(iMin)) && (iMax == "" || isNaN(iMax))) { return true;} 
                                else if ((iMin == "" || isNaN(iMin)) && iValue <= iMax) { return true; }
                                else if (iMin <= iValue && (iMax == "" || isNaN(iMax))) { return true; }
                                else if (iMin <= iValue && iValue <= iMax) { return true; }
                                return false;
               });
            });
            
            $(".dateinput").each(function(i, di){
              $('#' + stableid).dataTable().dataTableExt.afnFiltering.push(
                function (oSettings, aData, iDataIndex) {
                                if ($('#' + stableid).dataTable().attr("id") != oSettings.sTableId){ return true; }
                                var iMin =  $(di).find('.dateinputfrom').val();
                                if(iMin !=  $(di).find('.dateinputfrom').attr('name'))
                                  iMin = $(di).find('.dateinputfrom').datepicker( "getDate" );
                                var iMax =  $(di).find('.dateinputto').val();
                                if(iMax !=  $(di).find('.dateinputto').attr('name'))  
                                  iMax = $(di).find('.dateinputto').datepicker( "getDate" );
                                
                                var iValue = new Date( aData[aColumnIndex[$(di).attr('data-field')]]);
                                if ((iMin == "" || iMin == null || iMin == $(di).find('.dateinputfrom').attr('name')) && (iMax == "" || iMax == null || iMax == $(di).find('.dateinputto').attr('name')) ) { return true;} 
                                else if ((iMin == "" || iMin == null || iMin == $(di).find('.dateinputfrom').attr('name'))  && iValue <= iMax) { return true; }
                                else if (iMin <= iValue && (iMax == "" || iMax == null || iMax == $(di).find('.dateinputto').attr('name'))) { return true; }
                                else if (iMin <= iValue && iValue <= iMax) { return true; }
                                return false;
               });
            });
        }
       
       function fnappInitForm(){
            var uoms = new Array();
            $('#psruom').find('option').each(function(i, opt){ uoms.push($(opt).val()); });
            $('.uom').each(function(i, u){ if(jQuery.inArray($(u).attr('data-value'), uoms) > -1){ $(u).combobox('setValue',  $(u).attr('data-value')); } });
            $( "#psrSaveSubmit" ).click(function() {
            
                if(fnValidatepsrForm() == true){
                
                  $('#psrform').submit();
                }
               });

        $('#psrform').ajaxForm({  
            dataType: 'json', 
            beforeSubmit: psrbeforeSubmit });
            
        $("#psrform").validate({
                errorPlacement: function(error, element){
                   error.insertAfter(element.parent().find('.error_container'));
                   error.css('color', 'red'); 
                }
             });
         if($("#currencies").length){
         jQuery.validator.addMethod("currency", function(value, element) { 
              var curr = $("#currencies").combobox('getValue'); 
              if(curr == 'USD' || curr == 'CAD')
                return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{2})?|[1-9]{1}[0-9]{0,}(\.[0-9]{2})?|0(\.[0-9]{2})?|(\.[0-9]{2})?)$/.test(value);         
              else
                return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{4})?|[1-9]{1}[0-9]{0,}(\.[0-9]{4})?|0(\.[0-9]{4})?|(\.[0-9]{4})?)$/.test(value);         
            }, "Please enter a valid number.");}
                           
       $('#psrCancelForm').click(function() {
            $('#loadtarget').empty();
       });
       
       }
   
    function psrbeforeSubmit(formData, jqForm, options){
       $(formData).each(function(i, data){ 
           if(data.name == 'psreffdate')
             data.value = Date.parse($('#psreffdate').datepicker('getDate'));
           if(data.name == 'psrexpdate')
             data.value = Date.parse($('#psrexpdate').datepicker('getDate'));
        });
        $('#SupplierFrame').attr('data-submitted', 'submitted');
          
        $('#PlantFrame').attr('data-submitted', 'submitted'); 
                    
        var oTable = $('#approvalstable').dataTable();
        var sData = oTable.$('input').serialize();
        Price_Req_Appr_Controller.psrSubmitForm(sData, formData, function(result, event){
                      if(event.type == 'exception') {
                       alert(event.message);      
                      }
                      
                      
                       } , {buffer: true, escape: true, timeout:120000});
                      
                      $('#loadtarget').empty();
                      $('#psrsupp').combogrid('clear');
                      var oTable = $('#approvalstable').dataTable();
                      oTable.fnClearTable();
                      FetchApprovalTable();
    return false;   
   }
       
   function fnValidatepsrForm(){
       if($('#psr').val() == 'psr')    {
                            
              if($('#CUPS').combobox('getValue') == 'N'){
                  if($('#sapplant').combobox('getValue') != '')
                  { $('#PlantFrame').removeClass('error');
                    $('#PlantError').html('');
                  }
                  else
                  { $('#PlantFrame').addClass('error');
                    $('#PlantError').html('This field is required.');
                  }
                  
                  if($('#psrfreight').combobox('getValue') != '')
                  { $('#psrFreightFrame').removeClass('error');
                    $('#psrFreightError').html('');
                  }
                  else
                  { $('#psrFreightFrame').addClass('error');
                    $('#psrFreightError').html('This field is required.');
                  }
                  
                  if($('#sapplant').combobox('getValue') == '' || $('#psrfreight').combobox('getValue') == '')
                      return false;
              
                  }
                  return true;
       }
       
   }
       function fnverifySubmit(){
            var freightval = $('#freight').combobox('getText');
            $('#freightval').val(freightval);
            $('#createform').ajaxForm({  
                dataType: 'json', 
                beforeSubmit: beforeSubmit });
            ($('#createform').formSerialize());
            $("#createform").validate({
                errorPlacement: function(error, element){
                error.insertAfter(element.parent().find('.error_container'));
                error.css('color', 'red'); 
                }
            });
            if($("#currencies").length){
            jQuery.validator.addMethod("currency", function(value, element) { 
            var curr = $("#currencies").combobox('getValue'); 
        
            if(curr == 'USD' || curr == 'CAD')
                return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{2})?|[1-9]{1}[0-9]{0,}(\.[0-9]{2})?|0(\.[0-9]{2})?|(\.[0-9]{2})?)$/.test(value);         
            else
                return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{4})?|[1-9]{1}[0-9]{0,}(\.[0-9]{4})?|0(\.[0-9]{4})?|(\.[0-9]{4})?)$/.test(value);         
            },   "Please enter a valid number.");}
            
            jQuery.validator.addMethod("isText", function(value, element) { 
            return this.optional(element) || /^[a-zA-Z]/.test(value); 
            }, "Please enter valid text."); 
              
       }
       
       function fnInitForm(type){
       $('#formtable').dataTable({
            "bJQueryUI":true,
            "fnCreatedRow": function( nRow, aData, iDataIndex ) {
                                $('td:eq(0)', nRow).html( '<img class="details_img" src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/images/details_open.png')}">' );
                                //fnSetImgListener(nRow, 'formtable');
            },
            "aoColumnDefs": [
                                { "aTargets":[ "Approval_Status" ], "mData": "Approval_Status__c" },
                                { "aTargets":[ "level" ],"mData": "Approval_Level__c"},
                                { "aTargets":[ "appr" ],"mData": "Approver__r.Name" },
                                { "aTargets":[ "type" ],"mData": "Type__c" },
                                { "aTargets":[ "CM" ],"mData": "", "bVisible": false },
                                { "aTargets":[ "Unit_CM" ],"mData": "", "bVisible": false },
                                { "aTargets":[ "additional_dates" ],"mData": "additional_dates__c" },
                                { "aTargets":[ "sold" ],"mData": "SAP_SoldTo_Account__c" },
                                { "aTargets":[ "ship" ],"mData": "SAP_ShipTo_Account__c" },
                                { "aTargets":[ "mat" ],"mData": "SAP_Material__r.Name" },
                                { "aTargets":[ "start" ], 
                                  "mData": function ( source, type, val ) {
                                      if (type === 'set') {
                                          return;
                                      }
                                      else if (type === 'display') { 
                                        if (source.Requested_Effective_Date__c != '' && source.Requested_Effective_Date__c != null){
                                             var CSPDate = new Date(source.Requested_Effective_Date__c);
                                             if('{!DateFormat}' == 'mm/dd/yy')
                                                return (CSPDate.getUTCMonth()+1) + "/" + CSPDate.getUTCDate() + "/" + CSPDate.getUTCFullYear();
                                              else{
                                                return CSPDate.getUTCDate() + "/" + (CSPDate.getUTCMonth()+1) + "/" + CSPDate.getUTCFullYear();
                                              }
                                             }
                                        else return '';
                                        
                                      }
                                      else if (type === 'filter') {  return source.Requested_Effective_Date__c; }
                                      else if (type === 'sort') { 
                                       if((typeof source.Requested_Effective_Date__c == 'undefined') || source.Requested_Effective_Date__c == null)
                                          return '';
                                        else 
                                         return new Date(source.Requested_Effective_Date__c);
                                      }
                                      return source.Requested_Effective_Date__c;
                                  }
                                },
                                { "aTargets":[ "end" ], sClass:"Requested_Expiration_Date__c",sWidth:"2px", "bAutoWidth": false,
                                      "mData": function ( source, type, val ) {
                                          if (type === 'set') {
                                              return;
                                          }
                                          else if (type === 'display') { 
                                            if (source.Requested_Expiration_Date__c != '' && source.Requested_Expiration_Date__c != null){
                                                 var CSPDate = new Date(source.Requested_Expiration_Date__c);
                                                 if('{!DateFormat}' == 'mm/dd/yy')
                                                    return (CSPDate.getUTCMonth()+1) + "/" + CSPDate.getUTCDate() + "/" + CSPDate.getUTCFullYear();
                                                  else{
                                                    return CSPDate.getUTCDate() + "/" + (CSPDate.getUTCMonth()+1) + "/" + CSPDate.getUTCFullYear();
                                                  }
                                                 }
                                            else return '';
                                            
                                          }
                                          else if (type === 'filter') {  return source.Requested_Expiration_Date__c; }
                                          else if (type === 'sort') { 
                                           if((typeof source.Requested_Expiration_Date__c == 'undefined') || source.Requested_Expiration_Date__c == null)
                                              return '';
                                            else 
                                             return new Date(source.Requested_Expiration_Date__c);
                                          }
                                          return source.Requested_Expiration_Date__c;
                                      }
                                },
                                { "aTargets":[ "vol" ],"mData": "Volume__c"},
                                { "aTargets":[ "voluom" ],"mData": "Requested_UoM__c" },
                                { "aTargets":[ "price" ],"mData": "Price__c" },
                                { "aTargets":[ "priceuom" ],"mData": "Requested_Price_UoM__c"},
                                { "aTargets":[ "freight" ],"mData": "Freight_Terms__c" },    
                                { "aTargets":[ "TPI" ],
                                "mData": function ( source, type, val ) {
                                  if (type === 'set') { return;}
                                  else if (type === 'display') { 
                                    if((typeof source.TPI__c == 'undefined') || source.TPI__c == null)
                                      return '';
                                    else 
                                      return (source.TPI__c + '%');
                                  }
                                  return source.TPI__c;
                                  }
                                },
                                { "aTargets":[ "Inner_Table" ],"mData": "Inner_Table__c", sWidth:"2px", "bVisible":false},
                                { "aTargets":[ "Prospect_Material" ], "mData": "Prospect_Material__c", sClass:"Prospect_Material__c",sWidth:"2px", "bAutoWidth": false,"bVisible":false }, 
                                { "aTargets":[ "additional_dates" ], "mData": "additional_dates__c", sClass:"additional_dates__c",sWidth:"2px", "bAutoWidth": false,"bVisible":false }  
                         ]
            
            });
            
           $('#SimulateCM').hide();
           $('#freightlbl').hide();
           $('#freightoptions').hide();
           $('#freight').hide();
           
           
           var uoms = new Array();
           $('#brpriceuom').find('option').each(function(i, opt){ uoms.push($(opt).val()); });
           
           $.ech.multiselect.prototype.options.minWidth = "auto";
          $('.easyui-combo').combobox({editable:false, panelHeight: 'auto'});
          // $('#priceprot').combobox({editable:false});
         
       //    $('#currencies').combobox('disable');
        //   $('#pricetype').combobox('disable');
        //   $('#priceprot').combobox('disable');
        //   $('#drumdep').combobox('disable');
            $('#pacCode').combobox({editable:false});    
            $('#pacCode').combobox('setValue', $('#pacCode').attr('data-value'));       
           $('.set').each(function(i, u){ $(u).combobox('setValue', $(u).attr('data-value'));});
           $('.uom').each(function(i, u){ if(jQuery.inArray($(u).attr('data-value'), uoms) > -1){ $(u).combobox('setValue',  $(u).attr('data-value')); } });
           
           $('.easyui-linkbutton').linkbutton({plain:true});
           $('#SaveSubmit').linkbutton('disable');
           $.datepicker.setDefaults({ beforeShow: function (i) { if ($(i).attr('readonly')) { return false; } } }); 
           $( "#edate" ).datepicker({ minDate: 0, required:true , editable:false, dateFormat: "{!dateFormat}" });
           $( "#exdate" ).datepicker({ minDate: 0, maxDate: "+1Y", required:true, editable:false, dateFormat: "{!dateFormat}"  });
           
           $( "#edatenext" ).datepicker({ minDate: -1, maxDate: -2, required:true , editable:false, dateFormat: "{!dateFormat}" }).attr('readonly','readonly');
           $( "#exdatenext" ).datepicker({ minDate: 0, maxDate: "+1Y", required:true, editable:false, dateFormat: "{!dateFormat}"  });
           
          $( "#edate" ).change(function() {
                      var date =$('#edate').datepicker('getDate');
                      var d = date.getUTCDate();
                      var m = date.getUTCMonth();
                      var y = date.getUTCFullYear();
                      var newdate = new Date(y+1, m, d);          
                      $( "#exdate" ).datepicker( "option" ,{ minDate: date, maxDate: newdate, required:true, dateFormat: "{!dateFormat}"  });
                      $( "#exdate" ).datepicker( "setDate" , newdate );
                      
                      var newdate1 = new Date(y+1, m, d+1); 
                      $( "#edatenext" ).datepicker( "option" ,{ minDate: date, maxDate: newdate1, required:true, dateFormat: "{!dateFormat}"});
                      $( "#edatenext" ).datepicker( "setDate" , newdate1 );
                                    
                      var newdate2 = new Date(y+2, m, d+1); 
                      $( "#exdatenext" ).datepicker( "option" ,{ minDate: date, maxDate: newdate2, required:true, dateFormat: "{!dateFormat}"});
                      $( "#exdatenext" ).datepicker( "setDate" , newdate2 );
                    
           });
           
           $( "#exdate" ).change(function() {
              var date =$('#exdate').datepicker('getDate');
              var d = date.getUTCDate();
              var m = date.getUTCMonth();
              var y = date.getUTCFullYear();
              var newdate = new Date(y, m, d+1);   
              $( "#edatenext" ).datepicker( "option" ,{ minDate: date, maxDate: newdate, required:true, dateFormat: "{!dateFormat}"});
              $( "#edatenext" ).datepicker( "setDate" , newdate );
                            
              var newdate1 = new Date(y+1, m, d+1);   
              $( "#exdatenext" ).datepicker( "option" ,{ minDate: date, maxDate: newdate1, required:true, dateFormat: "{!dateFormat}"});
              $( "#exdatenext" ).datepicker( "setDate" , newdate1 );

           });
           
           $('.addRow').click(function(){ fnAddRow(); });
           $('.addRowCSP').click(function(){ fnAddRowCSP(); });

    $('.removeRow').click(function(){
      $(this).parent().parent().remove();
      $('.bracketcontainer').each(function(i, bc){
         $(this).find('.bracketvolume').attr('name', 'bracketvolume_' + i);
         $(this).find('.bracketprice').attr('name', 'bracketprice_' + i);
      });

   });
           
            $('.removeRowMultiple').click(function(){
  
  var rowcount = $(this).attr('id');
      $(this).parent().parent().remove();
     rowcount = rowcount.replace('removeRow_','');
     
      
      
      $('.bracketcontainernext').each(function( index ){
          
          var rowcountnext =  $(this).attr('id');
          
          rowcountnext = rowcountnext.replace('bracketcontainernextid_','');
          if(rowcount == rowcountnext){
          
          $(this).remove();

          }
          
        }); 
                   
         $('.bracketcontainer').each(function(i, bc){
         $(this).find('.bracketvolume').attr('name', 'bracketvolume_' + i);
         $(this).find('.bracketprice').attr('name', 'bracketprice_' + i);
      });
      
       $('.bracketcontainernext').each(function(i, bc){
         $(this).find('.bracketvolume').attr('name', 'bracketvolumenext_' + i);
         $(this).find('.bracketprice').attr('name', 'bracketpricenext_' + i);
      });
              
   });

         $('.bracketcontainer').each(function(i, bc){
         $(this).find('.bracketvolume').attr('name', 'bracketvolume_' + i);
         $(this).find('.bracketprice').attr('name', 'bracketprice_' + i);
      });
      
       $('.bracketcontainernext').each(function(i, bc){
         $(this).find('.bracketvolume').attr('name', 'bracketvolumenext_' + i);
         $(this).find('.bracketprice').attr('name', 'bracketpricenext_' + i);
      });

           
           $('#Competitors').combogrid({  
                panelWidth:200, 
                width:200, 
                value:'',    
                delay: 500,  
                idField:'Id',  
                textField:'Name', 
                required: true,
                keyHandler: {
                  query: function(q){
                          var g = $(this).combogrid('grid');
                          Price_Req_Appr_Controller.getComboGridData(q, 'Nexeo_Competitor__c', 'Name', 'status__c = \'Active\' and Competitor_or_Supplier__c = \'Competitor\'', 'Name ASC', '1000', function(result, event){
                            if(event.type == 'exception') {
                              error.apply(this, arguments);         
                            } else {      
                              g.datagrid('loadData', result);         
                            }
                          }, {buffer: true, escape: true, timeout:120000});
                   }
                },
                columns:[[  
                       {field:'Name',title:'Name',width:300} 
                ]],
                loader: function(param,success,error){
                    Price_Req_Appr_Controller.getComboGridData('', 'Nexeo_Competitor__c', 'Name', 'status__c = \'Active\' and Competitor_or_Supplier__c = \'Competitor\'', 'Name ASC', '1000', function(result, event){
        
                     if(event.type == 'exception') {
                        error.apply(this, arguments);         
                     } else {      
                       success(result);         
                     }
                 }, {buffer: true, escape: true, timeout:120000});
                },
                onSelect: function(param){ fixEscapedHTML($('#Competitors').combogrid('getText'), 'Competitors'); }
            });
           
           $('#Competitors').combogrid('textbox').focusin(function(){ 
           $('#Competitors').combogrid('clear');
             });
           $('#Competitors').combogrid('setValue', $('#Competitors').attr('data-compid'));
           fixEscapedHTML($('#Competitors').attr('data-compname'), 'Competitors');
      //     $('#Competitors').combobox('disable');
        
        
           $('#edate').keyup(function(){ $(this).val('')});
           $('#exdate').keyup(function(){ $(this).val('')});
           $('#exdate').datepicker( "hide" );
           
      //      $('#Competitors').combobox('disable');
            $('#obtainedfrom').combobox('disable');
        //    $('#compuom').combobox('disable');
            $('#freight').combobox({editable:false});
            
            aSel = new Array();
           $('#approvalstable').find('input:checked').each(function(i, sel){ aSel.push($(sel).val()); });
           
           if(aSel.length > 1 && $('#freight').attr('data-value') != '')
           {
               $('#freight').combobox('setValue', 'No Change');
               $('#freight').combobox('setText', 'No Change');
              
               $('#freightval').val('No Change');
           }         
           
           if(aSel.length == 1 && $('#freight').attr('data-value') == ''){
               $('#freight').combobox('setValue', '');
               $('#freight').combobox('setText', '');
               $('#freightval').val('');
           }
              
           if(aSel.length == 1 && $('#freightMatch').val() == 'No')           
               $("#freight").combobox('disable');
              
            
            $('#CancelForm').click(function() {
                $('#loadtarget').empty();
               });
               
             $( "#Simulate" ).click(function() {
                   CMflag = false;
                    $('#formtype').val('simulate');
                    if(fnValidateCreateForm() == true){
                      $('#createform').submit();
                      $('#SaveSubmit').linkbutton('enable');
                     } 
                    
               });
               
            $( "#SaveSubmit" ).click(function() {
           
                    $('#formtype').val('simulate');
                    if(fnValidateCreateForm() == true){
                        $('#createform').submit();
                      }
                  
                  if(saveflag == 'True'){
                    $('#formtype').val('savesubmit');
                    if(fnValidateCreateForm() == true){
                      $('#createform').submit();
                      $('#loadtarget').empty();
                      var oTable = $('#approvalstable').dataTable();
                      oTable.fnClearTable();
                      FetchApprovalTable();
                    }
                  }
               });
               
               $(".SelectedIds").each(function(i, v){
                     if($(this).attr("checked") == "checked")
                     {   var nTr = this.parentNode.parentNode;
                         aData = oTable.fnGetData( nTr );
                     }});
                                             
              
               
               if(aData.Prospect_Material__c == false){
                   if(aData.Type__c == 'RFQ'){
                           
                           $('#forrfq').show();
                           $('#forrfq2').show();  
                           $('.rfq').hide();
                           $('.quote').show();
                           $('.pros').hide();
                   }
                   else{
                       $('#freightlbl').show();
                       $('#freightoptions').show(); }
                   
                   
              }
              else
              {
                  if(aData.Type__c == 'RFQ'){
                      $('#forrfq').show();
                      $('#forrfq2').show();  
                      $('#Simulate').linkbutton('disable');
                      $('#SaveSubmit').linkbutton('enable');
                      $('.rfq').show();
                      $('.quote').hide();
                      
                      
                  }else{
                      $('.rfq').hide();
                      $('.quote').show();
                  }
              }
              
     
     }
     
     <!-- Price supplier -->
     function fnOpenPriceSupplier(aaSelected){

  var content = '';
  var shtoowners = new Array();
  shtoowners = $("#shtoowners").val();
  var shto = new Array();
  shto = $('#shto').val();
  
            
  content += '<br/><table><tr><td style="vertical-align:top;padding-right:1px;">';
  content += '<form id="plform"><table><tr><input type="hidden" id="hiddenplid" name="hiddenplid"/></tr><tr>';
  content += '<tr><td><b>To:</b></td></tr><tr><td><textarea rows="10" cols="40" id="plemails" name="plemails"/></td></tr>';
  content += '<tr><td><b>Subject:</b></td></tr><tr><td><input style="width:400px;" id="plsubject" name="plsubject"/></td></tr>';
  content += '<tr><td><b>Email Body:</b></td></tr><tr><td><textarea rows="10" cols="40" id="plbody" name="plbody"/></td></tr></table></form></td><td style="vertical-align:top;padding-right:1px;">';
  content += '<iframe scrolling="auto" id="frameid" frameborder="0" style="width:800px;height:600px;"></iframe></td></tr></table>';
  $('#dd3').dialog('open');
  

  $('#dd3container').html(content);
  $('#frameid').attr('src', '/apex/Price_Support?id=' + aaSelected);
  $('#frameid').attr('data-page', 'Price_Support'); 
  $('#hiddenplid').attr('value', aaSelected);
  $('#plemails').validatebox({required: true});
  $('#plsubject').validatebox({required: true});
  $('#plbody').validatebox({required: true}); 
  
}

     
     <!-- End Price Supplier -->
     

     function fnValidateCreateForm(){
  
          var isValid;
          if($('#Competitors').combobox('getValue') != '')
          { $('#CompetitorsFrame').removeClass('error');
            $('#CompetitorsError').html('');
          }
          else
          { $('#CompetitorsFrame').addClass('error');
            $('#CompetitorsError').html('This field is required.');
          }
          
          if($('#psr').val() == 'psr')    {
                    
              if($('#CUPS').combobox('getValue') == 'N'){
                  if($('#sapplant').combobox('getValue') != '')
                  { $('#PlantFrame').removeClass('error');
                    $('#PlantError').html('');
                  }
                  else
                  { $('#PlantFrame').addClass('error');
                    $('#PlantError').html('This field is required.');
                  }
                  
                  if($('#psrfreight').combobox('getValue') != '')
                  { $('#psrFreightFrame').removeClass('error');
                    $('#psrFreightError').html('');
                  }
                  else
                  { $('#psrFreightFrame').addClass('error');
                    $('#psrFreightError').html('This field is required.');
                  }
                  
                  if($('#sapplant').combobox('getValue') == '' || $('#psrfreight').combobox('getValue') == '')
                      return false;
              
                  }
          }
          
          if($("#createform").valid() == true && $('#Competitors').combobox('getValue') != '')
             return true;
          else
             return false;
     }             
                   
          function startSimulate(formData, Operation){
                  var oTable = $('#approvalstable').dataTable();
                  var expRecord = 0;
                  $(".SelectedIds").each(function(i, v){
                     if($(this).attr("checked") == "checked")
                     {   

                         var expDate = new Date($("#exdate").val());
                         expDate = new Date(expDate.getUTCFullYear(),expDate.getUTCMonth(),expDate.getUTCDate());
                         var currentDate = new Date();
                         currentDate  = new Date(currentDate.getUTCFullYear(), currentDate.getUTCMonth(), currentDate.getUTCDate());
                         if(expDate < currentDate){
                          expRecord++;
                         }
                     }});
                    
                  var sData = new Array();
                  oTable.$('input:checked').each(function(i, sel){ sData.push($(sel).val()); });
                  oTable = $('#formtable').dataTable();
                  oTable.fnClearTable();
                  
                  
                  Price_Req_Appr_Controller.SimulateForm(sData, formData, Operation , aData.Type__c, function(result, event){
                     
                      if(event.type == 'exception') {
                            
                      } else { 
                         
             if(Operation != 'savesubmit'){
                              
                  if(expRecord == 0){
                                if(result.length > 0){  
                                    oTable.fnAddData(result);
                                    if(result[0].TPI_below_threshold__c == true){
                                         alert('TPI is below 10% or above 200%. Please check the UoMs.');
                                         saveflag = 'True';
                                    }
                                    
                                    if(result[0].Type__c != 'RFQ')
                                    if(!result[0].Approver_Match__c){
                                        alert('You are not authorized to suggest this Price. Please select a Price/UOM in your range.');
                                        saveflag = 'False';
                                        }
                                        else{saveflag = 'True';}
                                 }
                               } 
                               else{
                                     $('#SaveSubmit').linkbutton('disable');
                                     saveflag = 'False';
                                     alert('Date validity is over for this request. Please update the Dates and simulate again');
                               } 
                            }
                       }
                         return false;
                       }, {buffer: true, escape: true, timeout:120000});
              }
              
              $('#formtable tbody td img, .formtable tbody td img').live('click', function () {
            var nTr = this.parentNode.parentNode;
            oTable = $(nTr.parentNode.parentNode).dataTable();
            var aData = oTable.fnGetData( nTr );
            
            var iRows = oTable.fnSettings().fnRecordsTotal();
            var iHeight = oTable.fnSettings().oScroll.sY;
            if ( this.src.match('details_close') )
            {
                this.src = "{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/images/details_open.png')}";
                oTable.fnClose( nTr );
                iHeight = iHeight -125;
            }
            else
            {
                this.src = "{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/images/details_close.png')}";
                oTable.fnOpen( nTr, fnFormatDetails(oTable, nTr), 'details' ); 
                $('.innerTable').dataTable({
                "bDestroy": true,
                "bPaginate": false,
                "bLengthChange": false,
                "bFilter": false,
                "bSort": false,
                "bInfo": false
                });
                iHeight = iHeight + 125;
            }

                      if(iHeight >= 75 && iHeight < 400 && oTable.fnSettings().oScroll.sY < 400)
                      {  oTable.fnSettings().oScroll.sY = iHeight;
                         $(oTable).parent().height(iHeight);
                      }
                      if(iHeight > 400 || oTable.fnSettings().oScroll.sY > 400)
                      {
                         oTable.fnSettings().oScroll.sY = 400;
                         $(oTable).parent().height(400);
                      }
        } );
        
              
function fnAddRowCSP(){
 
  var count = $('.bracketcontainer').size();
 
 var newRow = '<tr class="bracketcontainernext" id="bracketcontainernextid_'+ (count)+ '" style="height:10px;"><td style="vertical-align:top;padding-right:1px;">';
      newRow += '<input class="bracketvolume combo required currency" name="bracketvolumenext_'+ (count)+ '" style="width:100px;height:20px;" />';
      newRow += '<br/><div class="error_container"/></td><td></td><td style="vertical-align:top;padding-right:1px;"><input class="bracketprice combo required currency" name="bracketpricenext_'+ (count)+ '" style="height:20px;"/>';
      newRow += '<br/><div class="error_container"/></td></tr>';
  
   var newRowAdd = '<tr class="bracketcontainer" style="height:10px;"><td style="vertical-align:top;padding-right:1px;">';
      newRowAdd += '<input class="bracketvolume combo required currency" name="bracketvolume_'+ (count)+ '" style="width:100px;height:20px;" />';
      newRowAdd += '<br/><div class="error_container"/></td><td></td><td style="vertical-align:top;padding-right:1px;"><input class="bracketprice combo required currency" name="bracketprice_'+ (count)+ '" style="height:20px;"/>';
      newRowAdd += '<br/><div class="error_container"/></td><td></td><td><img id ="removeRow_'+ (count)+ '" class="removeRowMultiple" src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/images/details_close.png')}"/><b>&nbsp;Remove</b></td></tr>';
  $('#brackettablenext').append(newRow);
  $('#brackettable').append(newRowAdd);
  
  $('.removeRowMultiple').click(function(){
  
  var rowcount = $(this).attr('id');
      
     rowcount = rowcount.replace('removeRow_','');
     
      $(this).parent().parent().remove();
      
      $('.bracketcontainernext').each(function( index ){
          
          var rowcountnext =  $(this).attr('id');
          
          rowcountnext = rowcountnext.replace('bracketcontainernextid_','');
          if(rowcount == rowcountnext){
          
          $(this).remove();

          }
          
        }); 
                   
         $('.bracketcontainer').each(function(i, bc){
         $(this).find('.bracketvolume').attr('name', 'bracketvolume_' + i);
         $(this).find('.bracketprice').attr('name', 'bracketprice_' + i);
      });
      
       $('.bracketcontainernext').each(function(i, bc){
         $(this).find('.bracketvolume').attr('name', 'bracketvolumenext_' + i);
         $(this).find('.bracketprice').attr('name', 'bracketpricenext_' + i);
      });

   });

}
   
              function fnAddRow(){
  
              var count = $('.bracketcontainer').size();
             
              var newRow = '<tr class="bracketcontainer" style="height:10px;"><td style="vertical-align:top;padding-right:1px;">';
              newRow += '<input class="bracketvolume combo required number" name="bracketvolume_'+ (count)+ '" style="width:100px;height:20px;" />';
              newRow += '<br/><div class="error_container"/></td><td></td><td style="vertical-align:top;padding-right:1px;"><input class="bracketprice combo required number" name="bracketprice_'+ (count)+ '" style="height:20px;"/>';
              newRow += '<br/><div class="error_container"/></td><td></td><td><img class="removeRow" src="{!URLFOR($Resource.JQuery_Pricing, '/JQuery_Pricing/images/details_close.png')}"/><b>&nbsp;Remove</b></td></tr>';

              
              $('#brackettable').append(newRow);
              $('.bracketprice').each(function(){  });
              $('.removeRow').click(function(){
                  $(this).parent().parent().remove();
                  $('.bracketcontainer').each(function(i, bc){
                     $(this).find('.bracketvolume').attr('name', 'bracketvolume_' + i);
                     $(this).find('.bracketprice').attr('name', 'bracketprice_' + i);
                  });
                  
                  $('.bracketprice').each(function(){  });
               });    
            }

function fnpsr(){

 $('#psregion').combobox({editable:false});
 $('#psregion').combobox('setValue', $('#psregion').attr('data-value'));
 $('#psrsupp').combogrid({  
                panelWidth:200, 
                width:200, 
                delay: 500,  
                idField:'SAP_Price_Support__c',  
                textField:'Supplier_Name__c', 
                hasDownArrow: true,
                required: true,
                columns:[[  
                       {field:'Supplier_Name__c',title:'Supplier', width:300, sortable:true, sorter: function(a, b){
                         var va = (a === null) ? "" : "" + a,
                         vb = (b === null) ? "" : "" + b;
                         return va > vb ? 1 : ( va === vb ? 0 : -1 );
                       }} 
                ]],
                onLoadSuccess: function(param){ fixEscapedHTML($('#psrsupp').combogrid('getText'), 'psrsupp');
                },
                loader: function(param,success,error){
                var aSel = new Array();
                     $('#approvalstable').find('input:checked').each(function(i, sel){ aSel.push($(sel).val());                      
                     });
                    Price_Req_Appr_Controller.getpsrsuppliers(aSel.join('-'), function(result, event){
                     if(event.type == 'exception') {
                        error.apply(this, arguments);         
                     } else {      
                       success(result);         
                     }
                 }, {buffer: true, escape: true, timeout:120000});
                },
                onSelect: function(param){ fixEscapedHTML($('#psrsupp').combogrid('getText'), 'psrsupp');}    
            });
            
   $('#psrsupp').combogrid('textbox').focusin(function(){ 
   $('#psrsupp').combogrid('clear');});
   $('#psrsupp').combogrid('setValue', $('#psrsupp').attr('data-compid'));
   fixEscapedHTML($('#psrsupp').attr('data-compname'), 'psrsupp');
   

}
            
function fninitformpsr(){
           
   $( "#psreffdate" ).datepicker({ minDate: null, required:true , editable:false, dateFormat: "{!dateFormat}" });
   $( "#psrexpdate" ).datepicker({ minDate: 0, maxDate: "+1Y", required:true, editable:false, dateFormat: "{!dateFormat}" });
   $('#psreffdate').keyup(function(){ $(this).val('')});
   $('#psrexpdate').keyup(function(){ $(this).val('')});
   $( "#psreffdate" ).change(function() {
              var date =$('#psreffdate').datepicker('getDate');
              var d = date.getUTCDate();
              var m = date.getUTCMonth();
              var y = date.getUTCFullYear();
              var newdate = new Date(y+1, m, d);   
              $( "#psrexpdate" ).datepicker( "option" ,{ minDate: date, maxDate: newdate, required:true, dateFormat: "{!dateFormat}"});
              $( "#psrexpdate" ).datepicker( "setDate" , newdate );
   });
   
   $('.easyui-combo').combobox({editable:false, panelHeight: 'auto'});
   $('.easyui-linkbutton').linkbutton({plain:true});
   $("#psrform").validate({
                errorPlacement: function(error, element){
                   error.insertAfter(element.parent().find('.error_container'));
                   error.css('color', 'red'); 
                }
    });
    if($("#currencies").length){
    jQuery.validator.addMethod("currency", function(value, element) { 
       var curr = $("#currencies").combobox('getValue'); 
        
        if(curr == 'USD' || curr == 'CAD')
            return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{2})?|[1-9]{1}[0-9]{0,}(\.[0-9]{2})?|0(\.[0-9]{2})?|(\.[0-9]{2})?)$/.test(value);         
        else
            return this.optional(element) || /^([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{4})?|[1-9]{1}[0-9]{0,}(\.[0-9]{4})?|0(\.[0-9]{4})?|(\.[0-9]{4})?)$/.test(value);         
         }, "Please enter a valid number.");}
                     
   $('#sapplant').combogrid({  
        panelWidth:200, 
        width:200, 
        value:'',    
        delay: 500,  
        idField:'Id',  
        textField:'Plant_Name__c', 
        keyHandler: {
          query: function(q){
                  var g = $(this).combogrid('grid');
                                       
                  Price_Req_Appr_Controller.getsapplant(q, function(result, event){
                    if(event.type == 'exception') {
                      alert(event.message);
                    } else {      
                      g.datagrid('loadData', result);         
                    }
                  }, {buffer: true, escape: true, timeout:120000});
           }
        },
        columns:[[  
               {field:'Plant_Code__c',title:'Code',width:50},
               {field:'Plant_Name__c',title:'Name',width:200}  
        ]],
        loader: function(param,success,error){
        
            Price_Req_Appr_Controller.getsapplant('', function(result, event){

             if(event.type == 'exception') {
                alert(event.message);        
             } else { 
              
               success(result);         
             }
         }, {buffer: true, escape: true, timeout:120000});
        },
        onSelect: function(param){ fixEscapedHTML($('#sapplant').combogrid('getText'), 'sapplant');
                                   if($('#sapplant').combobox('getValue') != '')
                                  { $('#PlantFrame').removeClass('error');
                                    $('#PlantError').html('');
                                  }           
        }
    });
   
   $('#sapplant').combogrid('textbox').focusin(function(){ 
        $('#sapplant').combogrid('clear');
     });
   $('#sapplant').combogrid('textbox').blur(function(){ 
        if($('#sapplant').combobox('getValue') == '' && $('#PlantFrame').attr('data-submitted') == 'submitted')
        { $('#PlantFrame').addClass('error');
          $('#PlantError').html('This field is required.');
        }
     });
   $('#sapplant').combogrid('setValue', $('#sapplant').attr('data-compid'));
   fixEscapedHTML($('#sapplant').attr('data-compname'), 'sapplant');
   
   
   $( "#psreffdate" ).datepicker({ minDate: 0, required:true , editable:false, dateFormat: "{!dateFormat}" });
   $( "#psrexpdate" ).datepicker({ minDate: 0, maxDate: "+1Y", required:true, editable:false, dateFormat: "{!dateFormat}" });
   $('#psreffdate').keyup(function(){ $(this).val('')});
   $('#psrexpdate').keyup(function(){ $(this).val('')});

}

</script>
<style>
label.error {
    color: red;
}
div.error{
border-style:solid;
border-width:1.5px;
border-color:red;
}
input.error{
border-style:solid;
border-color:red;
}
select.error{
border-style:solid;
border-color:red;
}
input:disabled{ background-color:LightGray}

textarea { padding: 5px; width: 400px; }
#ff label{
     display:block;
     width:100px;
}
#button { padding: .5em 1em; text-decoration: none; }
#effect { padding: 0.4em; position: relative; }
.ui-menu { position: absolute; }
tbody tr.even:hover,  tbody tr.even td.highlighted {
    background-color: #ECFFB3;
}
tbody tr.odd:hover,  tbody tr.odd td.highlighted {
    background-color: #E6FF99;
}
tr.even:hover {
    background-color: #ECFFB3;
}
tr.even:hover td.sorting_1 {
    background-color: #DDFF75;
}
tr.even:hover td.sorting_2 {
    background-color: #E7FF9E;
}
tr.even:hover td.sorting_3 {
    background-color: #E2FF89;
}
tr.odd:hover {
    background-color: #E6FF99;
}
tr.odd:hover td.sorting_1 {
    background-color: #D6FF5C;
}
tr.odd:hover td.sorting_2 {
    background-color: #E0FF84;
}
tr.odd:hover td.sorting_3 {
    background-color: #DBFF70;
}

table.viewtable tr.even.row_selected td {
    background-color: #B0BED9;
}
table.viewtable tr.odd.row_selected td {
    background-color: #9FAFD1;
}

table.gridtable {
    font-family: verdana,arial,sans-serif;
    font-size:11px;
    color:#333333;
    border-width: 1px;
    border-color: #666666;
    border-collapse: collapse;
}
table.gridtable th {
    border-width: 1px;
    padding: 8px;
    border-style: solid;
    border-color: #666666;
    background-color: #dedede;
}
table.gridtable td {
    border-width: 1px;
    padding: 8px;
    border-style: solid;
    border-color: #666666;
    background-color: #ffffff;
}
label.error {
    color: red;
}
input.error{
border-style:solid;
border-color:red;
}
input.error+span{
border-style:solid;
border-color:red;
}
select.error{
border-style:solid;
border-color:red;
}
</style>
<input type="hidden" id="apprids"/>
<apex:form id="actionform">
<apex:actionStatus id="EnhancedStatus">
<apex:facet name="start">
<c:EnhancedActionStatus BackColor="#efefef" borderColor="#336699" borderSize="3" height="20px" width="100px" ImageUrl="{!$Resource.spinner}" Message="Loading..." messageStyle="color:darkred;font-size:11pt;font-weight:bold;"/>
</apex:facet>
</apex:actionStatus>
</apex:form>

<div id="toolbar" style="padding:5px;width:1600px;">
        <a href="javascript:void(0)" id="sb1" class="easyui-splitbutton" data-options="menu:'#mm1',iconCls:'icon-edit'">Menu</a>
</div>    
    <div id="mm1" style="width:350px;">
        <div id="approve">Approve Records</div>
        <div id="reassign">Reassign Approver</div>
        <div id="rejectalternate">Reject With Alternate</div>
        <div id="rejectalternateMult">Reject Alternate with Multiple Dates</div>
        <div id="SelectAll">Select All</div>
        <div id="ClearFilters">Clear Filters</div>
        <div class="reset" id="Reset">Deselect All</div> 
        <div class="menu-sep"></div>
        <div id="pendingsupplier">Pending Supplier</div>
        <div id="emailsupplier">Email Supplier</div>
        <div id="apprPSR">Approve PRT and Create/Modify Support</div>
        <div id="rejectaltPSR">Reject with Alternate PRT and Create/Modify Support</div>
        <div id="rejectprt">Reject PRT</div>
        
    </div>   
<table>
<tr><td>
<table style="width:100%;" class="viewtable display" id="approvalstable">
<thead>
<tr>
    <th class="Open" rowspan="2">Open</th>
    <th class="Select" rowspan="2">Select</th>
    <th class="textfilter" data-field="Owner.Name">Created By</th>
    <th class="listfilter" data-field="Approval_Status__c">Status</th>
    <th class="textfilter" data-field="SAP_ShipTo_Account__c">Ship To</th>
    <th class="textfilter" data-field="Material__c">Material</th>
    <th class="numberfilter" data-field="price__c">Price</th>
    <th class="listfilter" data-field="Requested_Price_UoM__c">UoM</th>
    <th class="numberfilter" data-field="plant__c">Plant</th>
    <th class="numberfilter" data-field="TPI__c">TPI</th>
    <th class="datefilter" data-field="Requested_Effective_Date__c">Start Date</th>
    <th class="datefilter" data-field="Requested_Expiration_Date__c">Expiration Date</th>
    <th class="numberfilter" data-field="quantity__c">EOQ</th>
    <th class="numberfilter" data-field="CM_Value__c">CM %</th>
    <th class="numberfilter" data-field="Unit_Contribution_Margin__c">Unit CM</th>
    <th class="listfilter" data-field="Freight_Terms__c">Inco Terms Description</th>
    <th class="listfilter" data-field="Price_Support_Exist__c">Price Support</th>
    <th class="listfilter" data-field="additional_dates__c">2-Dates</th>
    <th class="listfilter" data-field="Price_Protection_Changed_Value__c">Price Protection Changed</th>
    <th class="textfilter" data-field="Name">Transaction</th>
    <th class="listfilter" data-field="Type__c">Type</th>
    <th class="textfilter" data-field="comments__c">Comments</th>
    <th class="textfilter" data-field="Coordinator_Comments__c">Coordinator Comments</th>  
    <th class="textfilter" data-field="OEM__c">OEM</th>      
  <!--  <th class="listfilter" data-field="Approval_Level__c">Approval Level</th>
    <th class="textfilter" data-field="Approver__r.Name">Approver</th>  
    <th class="textfilter" data-field="SAP_SoldTo_Account__c">Sold To</th>    
    <th class="numberfilter" data-field="volume__c">Volume</th>
    <th class="listfilter" data-field="Requested_UoM__c">UoM</th>    
    <th class="textfilter" data-field="Approval_Rejection_Comments__c">Approval Comments</th> -->

    <th>Id</th>
    <th>Inner Table</th>
    </tr>

    <tr>
    <th class="Created_By">Created By</th>
    <th class="Approval_Status">Status</th>
    <th class="Ship_To">Ship To</th>
    <th class="Material">Material</th>
    <th class="Price">Price</th>
    <th class="Price_UoM">UoM</th>
    <th class="Plant">Plant</th>
    <th class="TPI">TPI</th>
    <th class="Start_Date">Start Date</th>
    <th class="Expiration_Date">Expiration Date</th>
    <th class="EOQ">EOQ</th>
    <th class="CM">CM %</th>
    <th class="Unit_CM">Unit CM</th>
    <th class="Inco_Terms_Description">Inco Terms Description</th>
    <th class="Price_Support">Price Support</th>
    <th class="MultipleDateRequest">2-Dates</th>
    <th class="Price_Protection_Changed">Price Protection Changed</th>
    <th class="Transaction">Transaction</th>
    <th class="Type">Type</th>
    <th class="Comments">Comments</th>
    <th class="Coordinator_Comments__c">Coordinator Comments</th> 
    <th class="OEM">OEM</th>   
   <!-- <th class="Approval_Level">Approval Level</th>
    <th class="Approver">Approver</th>   
    <th class="Sold_To">Sold To</th>    
    <th class="Volume">Volume</th>
    <th class="Volume_UoM">UoM</th>    
    <th class="Approval_Comments">Approval Comments</th>    --> 
    <th class="Id">Id</th>
    <th class="Inner_Table">Inner Table</th>
    </tr>
    </thead>
    <tbody></tbody>
    </table>

    </td></tr><tr><td>
    <div id="loadtarget"></div>
    </td></tr></table>


<div id="dd" class="easyui-dialog" >
    <form>
    <br/>
    <center><span><b>Approval Comments</b><br/><textarea id="approvalcomments" name="appcomments" rows="12" cols="150"/></span></center>
    </form>
</div>
<div id="dd6" class="easyui-dialog" >
    <form>
    <br/>
    <center><span><b>Reject Comments</b><br/><textarea id="rejectcomments" name="rejcomments" rows="12" cols="150"/></span></center>
    </form>
</div>

<div id="dd2" class="easyui-dialog" >
    <form>
    <br/>
    <center><span>
         
    <table>
    
    <tr><td><b>Approver</b></td><td>
    <input id="UserLookup" name="user" class="UserLookup" style="width:250px;"/>
    </td></tr> 
   
    </table>
    </span></center>
    </form>
</div>
<div id="dd3" class="easyui-dialog" style="width:300px;" >
<div id="dd3container"/>
</div>

<div id="psr" class="easyui-dialog" style="width:400px;">
    <form id="psrform">
    <br/>
    <center><span>
    <table>
    <tr><td><b>Price Support Supplier</b></td><td>
    <input id="psrsupp" name="psrsupp" style="width:250px;"/>
    </td></tr> 
    </table>
    </span></center>
    </form>
</div>


</apex:page>